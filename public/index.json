[
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/enhetsregisteret_omarbeidet/",
	"title": "Om arbeidet med forretningsobjektmodeller",
	"tags": [],
	"description": "Om arbeidet med forretningsobjektmodeller",
	"content": "Brønnøysundregistrenes (BR) prosjekt som jobber med å utvikle nytt saksbehandlingssystem (BRsys) er nå i oppstarten med Enhetsregisteret og Foretaksregisteret. Det er viktig å så tidlig som mulig få oversikt over informasjonen som finnes i registrene og brukes i etatens saksbehandling. I arbeidet brukes BRs rammeverk for begrepsbeskrivelser og informasjonsmodellering. Begrepsarbeidet og arbeidet med utarbeide forretningsobjektmodeller er godt i gang og prosjektet har et sett med utkast til visninger som nå blir publisert. Det er viktig å være klar over at dette er modeller som er under arbeid og at det vil kunne komme større og mindre endringer.\nForholdet mellom Enhetsregisteret og Foretaksregisteret Foretaksregisteret er et register over næringsdrivende norske og utenlandske foretak i Norge, og er et tilknyttet register til Enhetsregisteret. Foretaksregisteret inneholder mer utdypende informasjon om virksomhetene som f.eks. aksjekapital, vedtekter og ansvarsforhold. Selv om regelverk, kontrollnivå, registreringsplikt- og rett er forskjellig i Enhetsregisteret og Foretaksregisteret, har de to registrene mange likheter ved at de begge inneholder informasjon om virksomheter.\nOmfanget av innholdet i modellene Omfanget av forretningsobjektmodellene som nå publiseres er i hovedsak informasjonen som inngår i Enhetsregisteret. I tillegg vil det forekomme informasjonselementer som ikke inngår i selve registeret, men som enten inngår i dokumentasjon ol. som brukes ved saksbehandling eller på annen måte er viktig for å forestå Enhetsregisteret som forretningsområde.\nSe for øvrig beskrivelsen av de enkelte visningene.\nHva er en forretningsobjektmodell En forretningsobjektmodell er en konseptuell modell som beskriver de viktigste informasjonselementene innenfor et forretningsområde eller forretningsdomene. Forretningsobjektmodeller er et nyttig hjelpemiddel for å etablere en felles faglig forståelse av et forretningsområde. De lages ut fra et forretningsmessig perspektiv, uten fokus på IKT eller hvordan data for eksempel skal lagres. Forretningsobjektmodeller utarbeides ved bruk av UML klassediagram. Forretningsobjektene framstilles som klasser stereotypet “Forretningsobjekt”. Rettede assosiasjoner benyttes til å beskrive de forretningsmessige relasjonene mellom dem. Relasjonene navngis med verb eller verbfraser, og leses i pilens retning. Arv kan også brukes. Modellen modelleres og leses fra venstre til høyre.\nEt forretningsobjekt representerer en informasjonsenhet som er relevant eller viktig innenfor et forretningsområde. Forretningsobjekter kan ha ulik størrelse og oppløsning. Eksempler på forretningsobjekter kan være “person”, “virksomhet”, “adresse”, “støtteordning”, eller mer detaljert “organisasjonsnummer”. Forretningsobjekter har relasjoner til hverandre og disse beskriver forretningsmessige sammenhenger. For eksempel kan man gjennom relasjoner beskrive at en person har en adresse eller kan inneha rolle som kontaktperson for en virksomhet. Relasjonene uttrykkes som rettede assosiasjoner der vi navngir assosiasjonen eller ved bruk av arv.\nSiden denne type modeller er ment å skape felles faglig forståelse over et fagområde vil de være på et noe overordnet nivå. Det vil derfor være en del forretningsregler som ikke kommer til uttrykk i modellene. For Enhetsregisteret vil dette blant annet være regler for hvilke egenskaper ulike organisasjonsformer kan ha. For eksempel vil organisasjonsformen avgjøre hvilke roller en virksomhet kan ha, som at rollen innehaver kun kan registreres for organisasjonsformen enkeltpersonforetak.\nDet er viktig å være klar over at forretningsobjektmodellene alene ikke må brukes som grunnlag for utvikling. Det må heller ikke gjøres endringer på eksisterende systemer på bakgrunn av disse modellene. Modellene beskriver ikke dagens systemer.\nHvem er forretningsobjektmodellene for? Forretningsobjektmodeller er konseptuelle modeller ment for fagpersoner, jurister og andre på fagsiden. Denne type modeller brukes for å gi en oversikt over et fagområde og viser hvordan sentrale begreper forholder seg til hverandre i en gitt kontekst. Forretningsobjektmodeller er altså ikke datamodeller som er ment brukt til utvikling.\nHar du spørsmål til forretningsobjektmodellene kan du kontakte oss via informasjonsforvaltning@brreg.no.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/foretaksregisteret_omarbeidet/",
	"title": "Om arbeidet med forretningsobjektmodeller",
	"tags": [],
	"description": "Om arbeidet med forretningsobjektmodeller",
	"content": "Brønnøysundregistrenes (BR) prosjekt som jobber med å utvikle nytt saksbehandlingssystem (BRsys) er nå i oppstarten med Enhetsregisteret og Foretaksregisteret. Det er viktig å så tidlig som mulig få oversikt over informasjonen som finnes i registrene og brukes i etatens saksbehandling. I arbeidet brukes BRs rammeverk for begrepsbeskrivelser og informasjonsmodellering. Begrepsarbeidet og arbeidet med utarbeide forretningsobjektmodeller er godt i gang og prosjektet har et sett med utkast til visninger som nå blir publisert. Det er viktig å være klar over at dette er modeller som er under arbeid og at det vil kunne komme større og mindre endringer.\nForholdet mellom Enhetsregisteret og Foretaksregisteret Foretaksregisteret er et register over næringsdrivende norske og utenlandske foretak i Norge, og er et tilknyttet register til Enhetsregisteret. Foretaksregisteret inneholder mer utdypende informasjon om virksomhetene som f.eks. aksjekapital, vedtekter og ansvarsforhold. Selv om regelverk, kontrollnivå, registreringsplikt- og rett er forskjellig i Enhetsregisteret og Foretaksregisteret, har de to registrene mange likheter ved at de begge inneholder informasjon om virksomheter.\nOmfanget av innholdet i modellene Omfanget av forretningsobjektmodellene som nå publiseres er i hovedsak informasjonen som inngår i Foretaksregisteret. I tillegg vil det forekomme informasjonselementer som ikke inngår i selve registeret, men som enten inngår i dokumentasjon ol. som brukes ved saksbehandling eller på annen måte er viktig for å forestå Foretaksregisteret som forretningsområde.\nSe for øvrig beskrivelsen av de enkelte visningene.\nHva er en forretningsobjektmodell En forretningsobjektmodell er en konseptuell modell som beskriver de viktigste informasjonselementene innenfor et forretningsområde eller forretningsdomene. Forretningsobjektmodeller er et nyttig hjelpemiddel for å etablere en felles faglig forståelse av et forretningsområde. De lages ut fra et forretningsmessig perspektiv, uten fokus på IKT eller hvordan data for eksempel skal lagres. Forretningsobjektmodeller utarbeides ved bruk av UML klassediagram. Forretningsobjektene framstilles som klasser stereotypet “Forretningsobjekt”. Rettede assosiasjoner benyttes til å beskrive de forretningsmessige relasjonene mellom dem. Relasjonene navngis med verb eller verbfraser, og leses i pilens retning. Arv kan også brukes. Modellen modelleres og leses fra venstre til høyre.\nEt forretningsobjekt representerer en informasjonsenhet som er relevant eller viktig innenfor et forretningsområde. Forretningsobjekter kan ha ulik størrelse og oppløsning. Eksempler på forretningsobjekter kan være “person”, “virksomhet”, “adresse”, “støtteordning”, eller mer detaljert “organisasjonsnummer”. Forretningsobjekter har relasjoner til hverandre og disse beskriver forretningsmessige sammenhenger. For eksempel kan man gjennom relasjoner beskrive at en person har en adresse eller kan inneha rolle som kontaktperson for en virksomhet. Relasjonene uttrykkes som rettede assosiasjoner der vi navngir assosiasjonen eller ved bruk av arv.\nSiden denne type modeller er ment å skape felles faglig forståelse over et fagområde vil de være på et noe overordnet nivå. Det vil derfor være en del forretningsregler som ikke kommer til uttrykk i modellene. For Enhetsregisteret vil dette blant annet være regler for hvilke egenskaper ulike organisasjonsformer kan ha. For eksempel vil organisasjonsformen avgjøre hvilke roller en virksomhet kan ha, som at rollen innehaver kun kan registreres for organisasjonsformen enkeltpersonforetak.\nDet er viktig å være klar over at forretningsobjektmodellene alene ikke må brukes som grunnlag for utvikling. Det må heller ikke gjøres endringer på eksisterende systemer på bakgrunn av disse modellene. Modellene beskriver ikke dagens systemer.\nHvem er forretningsobjektmodellene for? Forretningsobjektmodeller er konseptuelle modeller ment for fagpersoner, jurister og andre på fagsiden. Denne type modeller brukes for å gi en oversikt over et fagområde og viser hvordan sentrale begreper forholder seg til hverandre i en gitt kontekst. Forretningsobjektmodeller er altså ikke datamodeller som er ment brukt til utvikling.\nHar du spørsmål til forretningsobjektmodellene kan du kontakte oss via informasjonsforvaltning@brreg.no.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/enhetsregisteret_begrepforretningsmodeller/",
	"title": "Begrep for forretningsmodeller for Enhetsregisteret",
	"tags": [],
	"description": "Begrep for forretningsmodeller for Enhetsregisteret",
	"content": "Nedenfor vises begreper som er sentrale innenfor Enhetsregisteret og Foretaksregisteret. Vi gjør oppmerksom på at begreper som ikke har status \u0026ldquo;godkjent\u0026rdquo;, er under arbeid og kan bli endret. Begreper som har status godkjent, er også publisert i Felles begrepskatalog, som er en del av Felles Datakatalog.\nI prosessen som BR nå er inne blir det også gjort et stort arbeid med å identifisere og beskrive begreper. Det er derfor viktig også å være klar over at dette etterhvert kan medføre endringer i begreper og terminologi.\nLink til begrepForretningsmodellER.xlsx\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/loesoereregisteret/loesningsmodeller/loesoereregisteret_loesningsmodell_bestand/",
	"title": "Endringslogg og totalbestand",
	"tags": [],
	"description": "Løsningsmodell for tilgjengeliggjøring endringslogg og totalbestand for Løsøreregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/strukturmodeller/foretaksregisteret_enkeltpersonforetak/",
	"title": "Enkeltpersonforetak i Foretaksregisteret",
	"tags": [],
	"description": "Enkeltpersonforetak i Foretaksregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_sentraleopplysninger/",
	"title": "Sentrale opplysninger",
	"tags": [],
	"description": "Sentrale opplysninger i Enhetsregisteret",
	"content": " Denne er utgangspunkt for alle andre visninger i modellen og gir oversikt. Modellene tar utgangspunkt i Enhetsregisterloven med tilhørende forskrift. Det sentrale objektet i Enhetsregisteret er virksomheten. Virksomheten identifiseres med organisasjonsnummer.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/foretaksregisteret_sentraleopplysninger/",
	"title": "Sentrale opplysninger",
	"tags": [],
	"description": "Sentrale opplysninger i Foretaksregisteret",
	"content": " Denne visningen er utgangspunkt for alle andre visninger i modellen og gir oversikt. Modellene tar utgangspunkt i Foretaksregisterloven og annen særlovgivning med regler for registrering i Foretaksregisteret. Det sentrale registreringsobjektet i Foretaksregisteret er foretaket. Foretaket identifiseres med organisasjonsnummer.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/enhetsregisteret_virksomhet/",
	"title": "Virksomhet",
	"tags": [],
	"description": "Virksomhet",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/",
	"title": "Forretningsobjektmodeller",
	"tags": [],
	"description": "Forretningsobjektmodeller for Enhetsregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/",
	"title": "Forretningsobjektmodeller",
	"tags": [],
	"description": "Forretningsobjektmodeller for Foretaksregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/foretaksregisteret_foretaketsstatus/",
	"title": "Foretakets status",
	"tags": [],
	"description": "Foretakets status i Foretaksregisteret",
	"content": " Denne visningen gir oversikt over hvilke tilstander og registreringsstatuser foretaket kan ha. Dette dreier seg om at selskapet er under frivillig avvikling eller tvangsavvikling, under sammenslåing og deling eller omdanning. Den viser også om selskapet har inngått avtale om akkordforhandling/rekonstruksjonsforhandling.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_kontaktinformasjon/",
	"title": "Kontaktinformasjon",
	"tags": [],
	"description": "Kontaktinformasjon i Enhetsregisteret",
	"content": " Denne visningen gir oversikt over hvilken kontaktinformasjon som kan være registrert på en virksomhet. Dette kan være fysiske adresser og digitale adresser.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/komme-i-gang/maskinporten-veiledning/",
	"title": "Maskinporten",
	"tags": [],
	"description": "Veiledning for integrasjon mot Maskinporten",
	"content": "Innledning Register over reelle rettighetshavere benytter maskinporten som autentiserings- og autorisasjonsmekanisme for tilgangsstyrte tjenester.\nMaskinporten er en av Digdirs fellesløsninger og sørger for sikker autentisering og autorisasjon for datautveksling mellom virksomheter.\nLøsningen garanterer identiteten mellom virksomheter og gjør det mulig å binde sammen systemer og utvikle nye tjenester på en effektiv måte.\nVi forutsetter at du i tillegg til å lese denne veiledningen grundig setter deg inn i Digdir sin egen dokumentasjon om maskinporten.\nProsess for å ta i bruk våre tilgangsstyrte tjenester Dette kapitlet oppsummerer i korte trekk hva du som virksomhet må gjøre for å komme til det punktet at du faktisk kan gjøre et oppslag mot våre tilgangsstyrte tjenester.\nFør du kan benytte tjenestene er det tre forutsetninger som må være på plass:\nDu må ha bestilt og fått tilgang til tjenesten i henhold til bestillingsprosedyre her. Du vil deretter ha mottatt informasjon om hvilket scope din virksomhet har fått tilgang til. Foreløpig er det disse scopene som er aktuelle: brreg:reelle/offentlig brreg:reelle/rapporteringspliktig Du må ha skaffet et virksomhetssertifikat knyttet til organisasjonsnummeret for din virksomhet, ett for test og ett for produksjon. Sjekk denne siden for informasjon om hvilke sertifikatutstedere som er godkjent til utsteding av virksomhetssertifikater i Norge Når det gjelder test må virksomheten anskaffe et testsertifikat utstedt under en egen test-CA slik at sertifikatene ikke aksepteres av systemer og løsninger som aksepterer skarpe sertifikater. Du må ta i bruk maskinporten som API-konsument. Dette betyr blant annet at du har registrert en klient hos maskinporten som knyttes opp mot det scopet du har fått tildelt (se punkt 1).\nVi anbefaler at du følger den punktvise fremgangsmåten som beskrives i Digdir sin dokumentasjon.\nDu bør i tillegg se på denne mer detaljerte dokumentasjonen om hvordan man bruker maskinporten som API-konsument. Når disse forutsetningene er på plass vil du kunne gjøre et API-kall mot maskinporten for å hente et access-token for det scopet du har fått tilgang til.\nTokenet må deretter sendes som autorisasjonstoken (Bearer token) når et kall mot tjenesten blir utført. Dette sekvensdiagrammet illustrerer på en enkel måte hvordan dette fungerer.\nFlere detaljer om det din virksomhet må gjøre i maskinporten Hvordan delegerer jeg tilgang videre til leverandør? Dersom din virksomhet har fått tilgang til våre tilgangsstyrte tjenester kan denne tilgangen delegeres til en eller flere leverandører om ønskelig.\nDette kan gjøres ved å følge denne guiden.\nEksempel med screenshots på hvordan man praktisk gjør delegeringen kan du finne her.\nUnder punkt 5 \u0026ldquo;Gi nye rettigheter\u0026rdquo; må man søke opp og velge et delegeringsskjema som stemmer overens med det maskinporten-scopet som virksomheten har fått. Nedenfor viser vi hvilket scope som \u0026ldquo;matcher\u0026rdquo; hvilket delegeringsskjema:\nScope: brreg:reelle/offentlig\nDelegeringsskjema: \u0026ldquo;Register over reelle rettighetshavere - Offentlig myndighet - På vegne av\u0026rdquo;\nScope: brreg:reelle/rapporteringspliktig\nDelegeringsskjema: \u0026ldquo;Register over reelle rettighetshavere - Rapporteringspliktig virksomhet - På vegne av\u0026rdquo;\nHvordan skal leverandør bruke den delegerte tilgangen? Leverandør som skal bruke delegert tilgang kan følge denne guiden.\nDet er verdt å poengtere et par ting knyttet til hvordan leverandør skal bruke delegert tilgang:\nLeverandør skal alltid bruke sin egen maskinporten-klient registrert med sitt eget virksomhetssertifikat ved henting av access-tokens fra maskinporten. Når du som leverandør skal hente et access-token fra maskinporten må du angi virksomhetens/konsumentens orgnr som consumer_org i JWT-grantet. Dette er orgnr på virksomheten som delegerte tilgangen. Maskinporten vil da sjekke i Altinn om et gyldig delegeringsforhold finnes mellom konsument og leverandør for aktuelt scope. Jeg har problemer med maskinport-integrasjonen Hvis du har problemer med å ta i bruk maskinporten skal henvendelser i utgangspunktet gå til Digdir.\nKontakt servicedesk@digdir.no oppgi client_id og miljø og forklar problemet.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/enhetsregisteret_omarbeidetstrukturmodeller/",
	"title": "Om arbeidet med strukturmodeller",
	"tags": [],
	"description": "Om arbeidet med strukturmodeller",
	"content": "Hva er en strukturmodell? Strukturmodellen beskriver detaljert hvilken informasjon som inngår i et forretningsdomene som f.eks. Person og Adresse. I modellen struktureres informasjonen i henhold til tenkte typer eller sett av objekter eller entiteter som omtales som klasser. Klassene kan være konkrete eller abstrakte, som f.eks. Person og Adresse. Typen av kunnskap eller informasjon om disse typene av objekter, beskrives som egenskaper ved klassene. En egenskap ved klassen Person kan f.eks. være fødselsnummer eller navn. I strukturmodellen beskriver man også relasjonene mellom klassene og hvilke roller de har overfor hverandre, som f.eks. at en person kan ha en adresse. Når man lager strukturmodeller, tar man utgangspunkt i forretningsobjektmodellen som er laget for tilsvarende domene. Forretningsobjektene og relasjonene som er definert mellom dem kan bidra til å avdekke hva som er hensiktsmessige klasser og relasjoner. Strukturmodellene skal være mest mulig uavhengige av kontekst og egne seg for gjenbruk. De skal også bidra til lik organisering av data innenfor og på tvers av interesseområder uavhengig av teknologivalg. Strukturmodellene er et utgangspunkt og virkemiddel for å sikre en felles forståelse mellom fagfolk og utviklere.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/foretaksregisteret_omarbeidetstrukturmodeller/",
	"title": "Om arbeidet med strukturmodeller",
	"tags": [],
	"description": "Om arbeidet med strukturmodeller",
	"content": "Hva er en strukturmodell? Strukturmodellen beskriver detaljert hvilken informasjon som inngår i et forretningsdomene som f.eks. Person og Adresse. I modellen struktureres informasjonen i henhold til tenkte typer eller sett av objekter eller entiteter som omtales som klasser. Klassene kan være konkrete eller abstrakte, som f.eks. Person og Adresse. Typen av kunnskap eller informasjon om disse typene av objekter, beskrives som egenskaper ved klassene. En egenskap ved klassen Person kan f.eks. være fødselsnummer eller navn. I strukturmodellen beskriver man også relasjonene mellom klassene og hvilke roller de har overfor hverandre, som f.eks. at en person kan ha en adresse. Når man lager strukturmodeller, tar man utgangspunkt i forretningsobjektmodellen som er laget for tilsvarende domene. Forretningsobjektene og relasjonene som er definert mellom dem kan bidra til å avdekke hva som er hensiktsmessige klasser og relasjoner. Strukturmodellene skal være mest mulig uavhengige av kontekst og egne seg for gjenbruk. De skal også bidra til lik organisering av data innenfor og på tvers av interesseområder uavhengig av teknologivalg. Strukturmodellene er et utgangspunkt og virkemiddel for å sikre en felles forståelse mellom fagfolk og utviklere.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/loesoereregisteret/loesningsmodeller/loesoereregisteret_loesningsmodell_oppslag/",
	"title": "Oppslag",
	"tags": [],
	"description": "Løsningsmodell for tilgjengeliggjøring oppslag for Løsøreregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/ektepaktregisteret/loesningsmodeller/ektepaktregisteret_loesningsmodell/",
	"title": "Tilgjengeliggjøring",
	"tags": [],
	"description": "Løsningsmodell for tilgjengeliggjøring for Ektepaktregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/enhetsregisteret_virksomhetsstruktur/",
	"title": "Virksomhetsstruktur",
	"tags": [],
	"description": "Virksomhetsstruktur",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/foretaksregisteret_adresseinformasjon/",
	"title": "Adresseinformasjon",
	"tags": [],
	"description": "Adresseinformasjon i Foretaksregisteret",
	"content": " Denne visningen gir oversikt over hvilke typer adresser som kan være registrert for foretaket.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/enhetsregisteret_kontaktinformasjon/",
	"title": "Kontaktinformasjon",
	"tags": [],
	"description": "Kontaktinformasjon",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_rollerer/",
	"title": "Roller i Enhetsregisteret",
	"tags": [],
	"description": "Roller i Enhetsregisteret",
	"content": " Denne visningen gir oversikt over hvilke roller en virksomhet kan ha. Med roller i denne sammenhengen menes relasjoner en virksomhet kan ha til fysiske personer eller andre virksomheter i Enhetsregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/enhetsregisteret_hovedenhetmrolle/",
	"title": "Hovedenhet med roller",
	"tags": [],
	"description": "Hovedenhet med roller",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/forretningsobjektmodeller/reellerettighetshavere_forretningsobjektmodell_1/",
	"title": "Register over reelle rettighetshavere, forretningsobjektmodell 1",
	"tags": [],
	"description": "Forretningsobjektmodell 1 for Register over reelle rettighetshavere",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/forretningsobjektmodeller/reellerettighetshavere_forretningsobjektmodell_2/",
	"title": "Register over reelle rettighetshavere, forretningsobjektmodell 2",
	"tags": [],
	"description": "Forretningsobjektmodell 2 for Register over reelle rettighetshavere",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/strukturmodell/reellerettighetshavere_strukturmodell/",
	"title": "Register over reelle rettighetshavere, strukturmodell",
	"tags": [],
	"description": "Strukturmodell for Register over reelle rettighetshavere",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/foretaksregisteret_rollerfr/",
	"title": "Roller i Foretaksregisteret",
	"tags": [],
	"description": "Roller i Foretaksregisteret",
	"content": " Denne visningen gir oversikt over hvilke roller et foretak kan ha. Med roller i denne sammenhengen menes relasjoner et foretak kan ha til fysiske personer eller andre foretak og virksomheter i Foretaks- og Enhetsregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_virksomhetensstatus/",
	"title": "Virksomhetens status",
	"tags": [],
	"description": "Virksomhetens status i Enhetsregisteret",
	"content": " Visningen gir oversikt over viktige tilstander en virksomhet kan ha, som at virksomheten er under avvikling eller at den skal sammenslås med andre virksomheter. Den viser også hvilke andre registre virksomheten er registrert i.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/enhetsregisteret_enkeltpersonforetak/",
	"title": "Enkeltpersonforetak i Enhetsregisteret",
	"tags": [],
	"description": "Enkeltpersonforetak i Enhetsregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_kontrollansvar/",
	"title": "Kontrollansvar",
	"tags": [],
	"description": "Kontrollansvar i Enhetsregisteret",
	"content": " Denne visningen viser ansvars-og rollefordelingen mellom Enhetsregisteret og tilknyttede register, der kontrollansvaret varier med organisasjonsform og tjenestevarianter.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/revisjonsplikt/",
	"title": "Revisjonsplikt",
	"tags": [],
	"description": "Revisjonsplikt for foretak",
	"content": " Denne visningen gir en oversikt over hva som påvirker plikten til å revidere årsregnskapet for et foretak.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_foretaksgruppe/",
	"title": "Foretaksgruppe",
	"tags": [],
	"description": "Foretaksgruppe i Enhetsregisteret",
	"content": " Visningen for foretaksgruppe gir oversikt over hvilke strukturer en virksomhet kan være en del av som f.eks. konsern.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/signaturprokura/",
	"title": "Signatur og prokura",
	"tags": [],
	"description": "Signatur og prokura i et foretak",
	"content": " Denne visningen gir en fremstilling av hvordan et foretak kan forplikte seg og hvem som kan forplikte foretaket.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/forretningsobjektmodeller/kapital/",
	"title": "Kapital",
	"tags": [],
	"description": "Ansvarskapital i et foretak",
	"content": " Denne visningen for kapital viser hva ansvarskapitalen består av og hvordan ansvarskapitalen kan endres ved forhøyelse og nedsettelse.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_strukturoffentligforvaltning/",
	"title": "Struktur offentlig forvaltning",
	"tags": [],
	"description": "Struktur offentlig forvaltning i Enhetsregisteret",
	"content": " Denne visningen viser hvilke strukturer en virksomhet som er en del av offentlig forvaltning kan ha. Med offentlig forvaltning menes her staten, fylkeskommunene og kommunene.\n"
},
{
	"uri": "https://brreg.github.io/docs/generelt/om-dokumentasjonen/",
	"title": "Om dokumentasjonen",
	"tags": [],
	"description": "Beskrivelse av hva vi legger i API-dokumentasjon, og hva som kommer når",
	"content": "Utvikling og fornying av registertjenester på Brønnøysundregistrenes nye registerplattform vil foregå i flere år fremover.\nTilgjengeliggjøring av registerdata gjennom API\u0026rsquo;er er en viktig del av tjenestetilbudet for registertjenestene. I GitHub vil vi samle dokumentasjon for de nye API\u0026rsquo;ene som er ferdig.\nI tillegg vil vi så tidlig som mulig også publisere dokumentasjon for API\u0026rsquo;er som under utvikling, men foreløpig ikke tatt i bruk.\nEldre API\u0026rsquo;er er fortsatt dokumentert andre steder, f.eks på Brønnøysundrestrenes hjemmeside eller i dokumentasjon som distribueres ved forespørsel.\nFor ytterligere informasjon om eldre tjenester, se https://www.brreg.no/produkter-og-tjenester/apne-data/ og https://www.brreg.no/produkter-og-tjenester/bestille-produkter/abonnement/.\nHva er API-dokumentasjon Disse sidene vil være et område hvor vi publiserer generell informasjon, tjenestebeskrivelser, informasjonsmodeller, testdata,\nosv. - som et supplement til den tekniske dokumentasjonen som vil publiseres som maskinlesbare OpenAPI-spesifikasjoner.\nI OpenAPI-spesifikasjonen vil det bl.a. ligge eksempler på request og respons, feltbeskrivelser,\nog annet som gjør at f. eks. godt utbredte Swagger blir et godt verktøy for å utforske og forstå API-ene.\nOpenAPI-spesifikasjonene vil også tilgjengeliggjøres gjennom Felles API-katalog,\nsom vil sørge for at API-ene enklere kan oppdages av de som måtte være interesserte, og inneholde en link tilbake til dokumentasjonen som ligger på disse sidene.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_underenhet/",
	"title": "Underenhet",
	"tags": [],
	"description": "Underenhet i Enhetsregisteret",
	"content": " Underenhet er en del av virksomheten og er en integrert del av denne. Underenheten identifiseres med et eget organisasjonsnummer. En underenhet kan ikke eksistere alene og har alltid en knytning mot en annen hovedenhet. En underenhet kan f.eks. være en geografisk adskilt lokasjon hvor det drives aktivitet med én eller flere ansatte.\n"
},
{
	"uri": "https://brreg.github.io/docs/generelt/",
	"title": "Generelt",
	"tags": [],
	"description": "Forklaringer rundt denne dokumentasjonssiden",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/generelt/kontakt-oss/",
	"title": "Kontakt oss",
	"tags": [],
	"description": "Hvor du skal henvende deg for å komme i kontakt med oss",
	"content": "Kontakt oss Spørsmål om innhold eller tilgang til API\u0026rsquo;er om reelle rettighetshavere kan sendes til opendata.rrh@brreg.no.\nSpørsmål om innhold eller tilgang til øvrige API\u0026rsquo;er for åpne data-tjenester, f.eks fra Enhets- og Foretaksregisteret, kan sendes til opendata@brreg.no.\nHenvendelser om tilgang til andre API\u0026rsquo;er kan sendes til oa-fagstillinger@brreg.no.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/forretningsobjektmodeller/enhetsregisteret_signaturprokura/",
	"title": "Signatur og Prokura",
	"tags": [],
	"description": "Signatur og Prokura i ER",
	"content": " Denne visningen gir en fremstilling av hvordan en virksomhet kan forplikte seg og hvem som kan forplikte virksomheten.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/",
	"title": "API-dokumentasjon",
	"tags": [],
	"description": "Beskrivelser av våre API-er finner du her",
	"content": "Se sidene under for hvilke API som tilbys for våre ulike registre og registerlignende tjenester.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/ektepaktregisteret/ektepakt/",
	"title": "Ektepakt knyttet til person",
	"tags": [],
	"description": "Beskrivelser av API innen domene Ektepaktregisteret",
	"content": "Grensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/api/v1/fnr/{fnr}?spraakkode={spraakkode} Hent opplysninger om ektepakter knyttet til et fødselsnummer eller d-nummer. Spraakkode er valgfri. Domener:\nFor testmiljø (ppe) https://ektepaktregisteret.ppe.brreg.no/ektepakt For produksjon https://ektepaktregisteret.brreg.no/ektepakt Oppslag på fødselsnummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et fødselsnummer eller d-nummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive ektepakter på fødselsnummeret eller d-nummeret.\nRequest Tar i mot et fødselsnummer eller d-nummer (fnr) som del av URL. Den valgfrie query parameteren \u0026ldquo;spraakkode\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB).\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, og dette orgnummeret skal være gyldig samt ha en gyldig avtale om å kunne hente ut opplysninger i Ektepaktregisteret. Forespørselen skal alltid inneholde fnr som det gjøres oppslag på. Dersom forespørselen inneholder et fnr som ikke er lovlig oppbygd, returneres det en feilmelding. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;spraakkode\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om ektepakten(e).\nEksempelrespons { \u0026#34;rolleinnehaver\u0026#34;: \u0026#34;06821349425\u0026#34;, \u0026#34;antallEktepakt\u0026#34;: 1, \u0026#34;oppslagstidspunkt\u0026#34;: \u0026#34;2023-09-05T16:39:55.373958263+02:00\u0026#34;, \u0026#34;spraak\u0026#34;: \u0026#34;NOB\u0026#34;, \u0026#34;ektepakt\u0026#34;: [ { \u0026#34;ektepaktnummer\u0026#34;: 1, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2023-06-01T05:30:00+02:00\u0026#34;, \u0026#34;ektepakttype\u0026#34;: \u0026#34;ektepakttype.ektepakt\u0026#34;, \u0026#34;ektepakttypebeskrivelse\u0026#34;: \u0026#34;Ektepakt\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;ektepaktstatus.tinglyst\u0026#34;, \u0026#34;statusbeskrivelse\u0026#34;: \u0026#34;Tinglyst\u0026#34;, \u0026#34;opprettelse\u0026#34;: \u0026#34;opprettelsestype.foersteOpprettelse\u0026#34;, \u0026#34;opprettelsestypebeskrivelse\u0026#34;: \u0026#34;Første gangs opprettelse av ektepakt\u0026#34;, \u0026#34;harSupplerendeOpplysningerIDokument\u0026#34;: false, \u0026#34;paategning\u0026#34;: [], \u0026#34;avtaleinnhold\u0026#34;: [ { \u0026#34;avtaletype\u0026#34;: \u0026#34;avtaletype.fulltSaereie\u0026#34;, \u0026#34;avtaletypebeskrivelse\u0026#34;: \u0026#34;Vi skal ha fullt særeie\u0026#34; } ], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.ektefelle\u0026#34;, \u0026#34;rolletypebeskrivelse\u0026#34;: \u0026#34;Ektefelle\u0026#34;, \u0026#34;person\u0026#34;: { \u0026#34;navn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;AUTORISERT\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;INNHEGNING\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Gaukvegen\u0026#34;, \u0026#34;nummer\u0026#34;: { \u0026#34;nummer\u0026#34;: \u0026#34;13\u0026#34; }, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0101\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;KONGSVINGER\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;2209\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;3401\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Kongsvinger\u0026#34; } } }, \u0026#34;avtaleinnhold\u0026#34;: [] }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.ektefelle\u0026#34;, \u0026#34;rolletypebeskrivelse\u0026#34;: \u0026#34;Ektefelle\u0026#34;, \u0026#34;person\u0026#34;: { \u0026#34;navn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;SORGLØS\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;BOLLE\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Kløvåsen\u0026#34;, \u0026#34;nummer\u0026#34;: {}, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0101\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;RAMNES\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;3175\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;3803\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Tønsberg\u0026#34; } } }, \u0026#34;avtaleinnhold\u0026#34;: [ { \u0026#34;avtaletype\u0026#34;: \u0026#34;avtaletype.saereieBlirFelleseieVedRolleSinDoed\u0026#34;, \u0026#34;avtaletypebeskrivelse\u0026#34;: \u0026#34;Særeie blir felleseie om jeg dør først\u0026#34; } ] } ] } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format. Hvis det er ingen treff får man fortsatt 200-status.\nHTTP-kode Feilmelding 400 Feil i fødselsnummer, vennligst prøv på nytt 403 Feil under autentisering av abonnent 500 Tjenesten feilet på serversiden Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;41c0b5b3-ed0a-4392-a57a-9bfc57dcd48c\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-08-11T14:27:33.724162177+02:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;Feil i fødselsnummer, vennligst prøv på nytt\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/ektepaktregisteret/",
	"title": "Ektepaktregisteret",
	"tags": [],
	"description": "Beskrivelser av API innen domene Ektepaktregisteret",
	"content": "Innledning Brønnøysundregistrene tilbyr en begrenset, standardisert maskin-til-maskin-tjeneste (API) som kan benyttes av eksterne partnere for innsyn i ektepakter fra Ektepaktregisteret.\nDenne dokumentasjonen viser hvordan eksterne systemer kan integrere seg mot APIet, og hvordan man benytter seg av tjenesten for å hente data.\nDet er også blitt opprettet en referanseapplikasjon for å gjøre det enklere å se hvordan man skal integrere. Koden for denne er lagt ut i brreg sitt repository på github: refapp-integrasjon\nSyntetiske testdata For enkelte fødselsnummer kan det være registrert et stort antall ektepakter i vårt testmiljø. Ved oppslag på disse kan du oppleve time-out feilmelding. Forsøk da oppslag på en annen identifikator. Brønnøysundregistrene benytter selv det samme testmiljøet, og testdataene er ikke statisk. Disse endres kontinuerlig basert på vår egen testing, samt tinglysning i vårt testmiljø som utføres av eksterne brukere. Du vil også sporadisk kunne finne testdata som har innhold som ikke er i henhold til forretningsregler, eller testdata som er mangelfulle.\nAPI-referanse Denne tjenesten tilbyr opplysninger om:\nRettsstiftelser tilknyttet person gitt personens fødselsnummer eller d-nummer Dokumentasjon er også tilgjengelig i Swagger:\nTestmiljø Produksjonsmiljø Eksempel på request- og response-objekter (implementert i Java) for APIet kan sees her: refapp-integrasjon DTOer\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger:\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:ektepakt/tlg Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nSe veiledning for integrasjon mot Maskinporten.\nRegelverk: Hjemler for tilgjengeliggjøring av data fra Brønnøysundregistrene.\nHTTP-statuskoder Oversikt over HTTP-statuskoder i APIet.\nHTTP-kode Beskrivelse 200 OK Henting av data gikk bra 400 Bad Request Feil i spørring. Applikasjonen vil gi en detaljert feilmelding for hva som er feil med spørring 403 Forbidden Feil ved autentisering eller autorisering. Bearer tokenet som ble sendt inn er ikke gyldig eller har ikke en gyldig avtale om maskinelt oppslag på opplysninger i Løsøreregisteret 500 Internal Server Error Feil på server side, for eksempel at en underliggende datakilde ikke svarer Ordliste Definisjoner på begrep som er brukt i denne dokumentasjonen.\nBegrep Definisjon fnr Fødselsnummer for person d-nummer Identifikasjonsnummer som tildeles personer med midlertidig tilknytning til Norge, det vil si som ikke er bosatt i Norge. Består av en modifisert sekssifret fødselsdato og et femsifret personnummer. Fødselsdatoen modifiseres ved at det legges til 4 på det første sifferet. ektepakt Avtale om formuesordningen mellom ektefeller "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/ektepaktregisteret/",
	"title": "Ektepaktregisteret",
	"tags": [],
	"description": "Informasjonsmodeller for Ektepaktregisteret",
	"content": "Informasjonsmodeller for Ektepaktregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/elektronisk-mottak/",
	"title": "Elektronisk mottak",
	"tags": [],
	"description": "Beskrivelser av API innen BRs elektroniske mottak av meldinger",
	"content": "Brønnøysundregistrenes elektroniske mottak for ny registerplattform (BRsys) har integrasjoner mot Altinn og Maskinporten i Digdir. Dette innebærer at eksterne parter kan sende strukturerte meldinger med vedlegg gjennom Altinn Formidlingstjeneste og Altinn Innsendingstjeneste. I tillegg til dette er det altså opprettet et eget REST-grensesnitt hvor autorisasjon skjer ved hjelp av Maskinporten hos Digdir.\nFor detaljer om disse se våre sider om Altinn-integrasjon eller direkte mot BRs mottak.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/enhetsregisteret/",
	"title": "Enhetsregisteret",
	"tags": [],
	"description": "Beskrivelser av API innen domene Enhetsregisteret",
	"content": "Denne siden er foreløpig opprettet kun for å illustrere oppbygningen av dokumentasjonen. Etterhvert vil det på dette området komme mer informasjon og spesifikasjon om API-er for Enhetsregisteret.\nI mellomtiden kan eksisterende API fra Enhetsregisteret være av interesse Enhetsregisteret i Felles API-katalog.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/",
	"title": "Enhetsregisteret",
	"tags": [],
	"description": "Informasjonsmodell for Enhetsregisteret",
	"content": "Enhetsregisteret er en nasjonal felleskomponent som samordner grunndata om virksomheter i næringslivet, frivillig sektor og offentlig forvaltning som finnes i ulike offentlige registre.\nGjennom tildeling av organisasjonsnummer bidrar Enhetsregisteret til sikker identifisering av juridiske personer mv. Enhetsregisteret inneholder nøkkelinformasjon om de registrerte virksomhetene. Disse dataene skal gjenbrukes av forvaltningen ellers, slik at næringslivet og andre ikke trenger å oppgi disse dataene til flere etater eller registre.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/foretaksregisteret/",
	"title": "Foretaksregisteret",
	"tags": [],
	"description": "Beskrivelser av API innen domene Foretaksregisteret",
	"content": "Denne siden er foreløpig opprettet kun for å illustrere oppbygningen av dokumentasjonen. Etterhvert vil det på dette området komme mer informasjon og spesifikasjon om API-er for Foretaksregisteret .\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/",
	"title": "Foretaksregisteret",
	"tags": [],
	"description": "Informasjonsmodell for Foretaksregisteret",
	"content": "Foretaksregisteret er et register over alle næringsdrivende norske og utenlandske foretak i Norge. Registeret skal sikre rettsvern og økonomisk oversikt og er en viktig kilde for alle som trenger korrekte opplysninger om aktørene i norsk næringsliv. Alle næringsdrivende foretak plikter å registrere seg i Foretaksregisteret. Enkeltpersonforetak som driver handel med innkjøpte varer eller har mer enn fem ansatte i hovedstilling plikter også å registrere seg i Foretaksregisteret, andre enkeltpersonforetak kan registrere seg på frivillig grunnlag.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/forretningsobjektmodeller/",
	"title": "Forretningsobjektmodell",
	"tags": [],
	"description": "Forretningsobjektmodeller for Register over Reelle rettighetshavere",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/",
	"title": "Informasjonsmodeller",
	"tags": [],
	"description": "Beskrivelser av informasjonsmodeller",
	"content": "En informasjonsmodell er en formell beskrivelse av en begrenset mengde av informasjon innenfor et gitt domene eller interesseområde. For å beskrive et domene, benyttes to modelltyper - forretningsobjektmodell og strukturmodell.\nI undersidene finner du forretningsobjektmodeller og strukturmodeller delt inn etter register eller fagområde. Løsningsmodellene finner du under de enkelte API-beskrivelsene. Link til informasjonsmodeller i GitHub\nForretningsobjektmodell En forretningsobjektmodell beskriver de viktigste forretningsobjektene innenfor et forretningsdomene.\nEt forretningsobjekt kan anses som en representasjon av et begrep som brukes i et bestemt forretningsdomene og som omfatter en avgrenset informasjonsmengde eller informasjonsenhet. Forretningsobjekter kan ha ulik størrelse og oppløsning. Eksempler er person, virksomhet, støtteordning, søknad eller ektepakt. Forretningsobjekter kan ha relasjoner til hverandre, som beskriver hvordan de forholder seg til eller roller de har overfor hverandre innenfor et forretningsdomene.\nForretningsobjektmodeller er nyttige hjelpemiddel når man skal etablere en felles, faglig forståelse av et forretningsdomene og enes om et omforent begrepsapparat. De benyttes også som utgangspunkt for å lage strukturmodeller.\nStrukturmodeller En strukturmodell beskriver detaljert hvilken informasjon som inngår i et forretningsdomene og hvordan de er logisk relatert, uavhengig av teknologi og implementasjon. I modellen struktureres informasjonen i henhold til tenkte enheter – typer eller sett av objekter eller entiteter som omtales som klasser. Klassene kan være konkrete eller abstrakte, som f.eks. Person og Adresse. Typen av kunnskap eller informasjon om disse typene av objekter, beskrives som egenskaper ved klassene. En egenskap ved klassen Person, kan f.eks. være fødselsnummer eller navn. I strukturmodellen beskriver man også relasjonene mellom klassene og hvilke roller de har overfor hverandre, som f.eks. at en person kan ha en adresse.\nNår man lager strukturmodeller, tar man utgangspunkt i forretningsobjektmodellen som er laget for tilsvarende domene. Forretningsobjektene og relasjonene som er definert mellom dem kan bidra til å avdekke hva som er hensiktmessige klasser og relasjoner. Strukturmodellene skal være mest mulig uavhengige av kontekst og egne seg for gjenbruk. De skal også bidra til lik organisering av data innenfor og på tvers av interesseområder uavhengig av teknologivalg.\nLøsningsmodell En løsningsmodell er en logisk modell som beskriver hvordan informasjonen struktureres og brukes i en konkret løsning, som f.eks. i et API eller en database. Løsningsmodellene er laget med utgangspunkt i innholdet i en eller flere strukturmodeller. Mens strukturmodellene er generelle og skal kunne gjenbrukes i flere løsninger, er løsningsmodellen laget for en gitt løsning. Normalt vil elementene i en løsningsmodell være en delmengde av elementene i en eller flere strukturmodeller.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/elektronisk-mottak/maskinport-integrasjon/innsending/",
	"title": "Innsending av meldinger",
	"tags": [],
	"description": "Beskrivelser av API innen BRs elektroniske mottak av meldinger",
	"content": "Innledning Brønnøysundregistrenes elektroniske mottak har et REST-grensesnitt som kan benyttes av eksterne parter for innsending av meldinger til Brønnøysundregistrene.\nAPIet er utviklet i Java og Spring Boot, men dette skal ikke legge føringer for klienter som tar APIet i bruk.\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger.\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:mottak Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nAccess-tokenet oppgis i headeren Authorization. Husk Bearer før tokenet.\nHeader Verdi Authorization Bearer eyJraWQiOiJjWmswME1rbTVIQzRnN3Z0NmNwUDVGSFpMS0pzdzhmQkFJdUZi\u0026hellip; (forkortet) Grensesnittbeskrivelse Tjenesten benytter seg av standard HTTP POST. Følgende funksjonalitet tilbys for eksterne systemer/brukere:\nHTTP-metode URL Beskrivelse Sikret med jwt POST https://mottak.brreg.no/inbound/upload Sender inn melding med 0 eller flere vedlegg JA Upload Endepunktet /upload tar i mot POST multipart-requester med følgende deler:\nFelt Type Innhold Påkrevd Authorization Header Jwt access token Ja payload form-data xml i henhold til Melding (http://schema.brreg.no/postmottak/melding.xsd) Ja attachments multipart-file fil/bytestream Nei Denne forespørselen laster opp en melding med ingen eller flere vedlegg/attachments.\nResponse Ved 200 OK:\n{ \u0026#34;mottakId\u0026#34;: \u0026#34;36b5516f-ecd4-4948-9586-42f4b7d3198a\u0026#34;, \u0026#34;mottattTidspunkt\u0026#34;: \u0026#34;2019-09-02T13:18:40.785\u0026#34;, \u0026#34;antallVedlegg\u0026#34;: 2 } Feilmeldinger HTTP-kode Applikasjonsfeilkode Feilmelding 500 Internal Server Error ERROR-00000 Generisk feilhåndterer. Forsøk igjen senere. Hvis vedvarende, kontakt support 400 Bad Request CLIENTERROR-10001 Melding kunne ikke behandles, feilet i XML-validering 400 Bad Request CLIENTERROR-10002 Mangler med request (f.eks. manglende payload) Disse kommer på JSON-formatet:\n{ \u0026#34;feilId\u0026#34;:\u0026#34;72577aa8-0ba1-4424-a310-fd9671547953\u0026#34;, \u0026#34;mottakId\u0026#34;:\u0026#34;fe7234ec-b51f-47d1-a414-5b17123118b3\u0026#34;, \u0026#34;kilde\u0026#34;:\u0026#34;maskinport-agent\u0026#34;, \u0026#34;feilkode\u0026#34;:\u0026#34;ERROR-00003\u0026#34;, \u0026#34;beskrivelse\u0026#34;:\u0026#34;Message invalid according to schema\u0026#34;} I tillegg kommer 401 - Unauthorized ved mangler på Bearer token.\nHTTP-kode header Header-value Forklaring 401 - Unauthorized WWW-Authenticate Bearer realm=\u0026ldquo;unspecified\u0026rdquo;, error=\u0026ldquo;unauthorized\u0026rdquo;, error_description=\u0026ldquo;Full authentication is required to access this resource\u0026rdquo; JWT access token ikke oppgitt i Authorization header i request. 401 - Unauthorized WWW-Authenticate Bearer realm=\u0026ldquo;unspecified\u0026rdquo;, error=\u0026ldquo;invalid_token\u0026rdquo;, error_description=\u0026ldquo;invalid bearer token or wrong scope for bearer token\u0026rdquo; JWT access token er oppgitt, men det er enten ugyldig (utgått, korrupt eller gjeldende for et annet scope en tjenesten krever). Eksempel på hvordan opprette httpbody og sende denne ved bruk av Spring og resttemplate Opprett httpEntity MultiValueMap\u0026lt;String, Object\u0026gt; body = new LinkedMultiValueMap\u0026lt;\u0026gt;(); MultiValueMap\u0026lt;String, String\u0026gt; fileMap = new LinkedMultiValueMap\u0026lt;\u0026gt;(); fileMap.add(HttpHeaders.CONTENT_DISPOSITION, ContentDisposition.builder(\u0026#34;form-data\u0026#34;) .name(\u0026#34;attachments\u0026#34;) .filename(\u0026#34;filnavn.zip\u0026#34;) .build().toString()); HttpEntity\u0026lt;byte[]\u0026gt; fileEntity = new HttpEntity\u0026lt;\u0026gt;(\u0026#34;filecontent\u0026#34;.getBytes(), fileMap); body.add(\u0026#34;attachments\u0026#34;, fileEntity); body.add(\u0026#34;payload\u0026#34;, new HttpEntity\u0026lt;String\u0026gt;(konvolutt)); HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.MULTIPART_FORM_DATA); String token = bearerTokenProvider.getToken(scope); // provides Maskinporten JWT accesstoken if (token != null) { headers.add(\u0026#34;Authorization\u0026#34;, \u0026#34;Bearer \u0026#34; + token); } HttpEntity\u0026lt;MultiValueMap\u0026lt;String, Object\u0026gt;\u0026gt; requestEntity = HttpEntity\u0026lt;\u0026gt;(body, headers); Send httpEntity ResponseEntity\u0026lt;String\u0026gt; objectResponseEntity = restTemplate.exchange(\u0026#34;http://maskinportagent/mottak\u0026#34;, HttpMethod.POST, requestEntity, String.class); "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/elektronisk-mottak/maskinport-integrasjon/",
	"title": "Integrasjon direkte mot BR",
	"tags": [],
	"description": "Beskrivelser av API innen BRs elektroniske mottak av meldinger",
	"content": "Innledning Brønnøysundregistrenes elektroniske mottak har et REST-grensesnitt som kan benyttes av eksterne parter for innsending av meldinger til Brønnøysundregistrene.\nAPIet er utviklet i Java og Spring Boot, men dette skal ikke legge føringer for klienter som tar APIet i bruk.\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger.\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:mottak Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nAccess-tokenet oppgis i headeren Authorization. Husk Bearer før tokenet.\nHeader Verdi Authorization Bearer eyJraWQiOiJjWmswME1rbTVIQzRnN3Z0NmNwUDVGSFpMS0pzdzhmQkFJdUZi\u0026hellip; (forkortet) "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/integrasjon-maskinporten/mp-integrasjonsveiledning/",
	"title": "Integrasjon mot Maskinporten",
	"tags": [],
	"description": "Veiledning for integrasjon mot Maskinporten",
	"content": "Innledning Tilgang til APIet krever autentisering via Maskinporten.\nKort fortalt så må API-konsument initielt opprette en Maskinport-integrasjon (oauth2-klient) og registrere scopet til APIet til denne. Når APIet skal brukes, må denne oauth2-klienten forespørre et token fra Maskinporten og inkludere dette tokenet i kall til APIet.\nDet er også blitt opprettet en referanseapplikasjon for å gjøre det enklere å se hvordan man skal integrere. Koden for denne er lagt ut i brreg sitt repository på github: https://github.com/brreg/refapp-integrasjon\nMERK: API-konsument må en ha et gyldig virksomhetssertifikat, enten for et syntetisk organisasjonsnummer (testmiljø), eller for et gyldig organisasjonsnummer (produksjonsmiljø).\nOpprette Maskinport-integrasjon (oauth2-klient) API-konsument trenger en oauth2-klient (også omtalt som klient) for å hente Maskinport-token for aktuelt scope, som må inkluderes i kall til APIet. Se overordnet arkitekturbeskrivelse.\nIntegrasjonen/klienten kan opprettes manuelt i Samarbeidsportalen eller via Maskinporten sitt selvbetjeningsAPI. Da selvbetjeningsAPIet også er beskyttet av Maskinport-token, må API-konsument ha en egen oauth2-klient, også omtalt som selvbetjeningsklient, for å bruke denne tjenesten. Ta kontakt med Digdir sin servicedesk for å få en selvbetjeningsklient.\nKlienten skal registreres for aktuelt scope, f.eks. brreg:losore/utlegg. Se dokumentasjon av APIene for informasjon om hvilket scope som skal brukes.\nMaskinporten vil svare med en client_id.\nMERK: For løsøreregisteret: En klient for et syntetisk organisasjonsnummer (testmiljø) må opprettes via selvbetjeningsAPIet. Selvbetjeningsklienter for API-konsumenter av ITU/UTT-API er allerede opprettet med identifikator oidc_\u0026lt;fiktivt organisasjonsnummer\u0026gt;_api.\nHente access token MERK Dette steget forutsetter at en klient allerede er opprettet med tilgang til aktuelt scope.\nLag Keystore En keystore av typen JKS som inneholder virksomhetssertifikatet må opprettes, se Maskinporten for nærmere informasjon.\nDette kan gjøres i UNIX-systemer (Mac/Linux) ved å kjøre kommandoen:\nkeytool -v -importkeystore -srckeystore \u0026lt;filnavn\u0026gt; -srcstoretype PKCS12 (om virksomhetssertifikatet er av type .p12) -destkeystore \u0026lt;ønsket-navn-på-keystore\u0026gt; -deststoretype JKS Etter input vil du først lage et passord for keystore, dette trenger du videre. Deretter blir en spurt om passordet til virksomhetssertifikatet. Skriv inn ønsket og gitt passord og keystore vil bli opprettet.\nHent JWT Opprett en properties fil med felter som beskrevet her.\nAutentisering via Maskinporten foregår ved hjelp av JWT tokens. Digdir har laget en egen JWT-grant-generator som lastes ned og bygges i henhold til dokumentasjonen som finnes på lenken. Alternativt kan man ta utgangspunkt i brreg sin refapp-integrasjon.\nFlere av feltene vil JWT-grant-generator skape automatisk om denne brukes. Ved bruk av JWT-grant-generator, opprett en properties fil med feltene beskrevet i seksjonen for å generere JWT, med følgende endringer:\nissuer=\u0026lt;client_id\u0026gt; scope=\u0026lt;scope for API\u0026gt; Scope kan f.eks. være brreg:losore/utlegg. Se dokumentasjon av APIene for informasjon om hvilket scope som skal brukes.\nVed kjøring av JWT-grant-generatoren vil en få ut et access token som kan brukes mot våre APIer.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/elektronisk-mottak/altinn-integrasjon/",
	"title": "Integrasjon via Altinn",
	"tags": [],
	"description": "Beskrivelser av API innen BRs elektroniske mottak av meldinger",
	"content": "Denne siden er foreløpig opprettet kun for å illustrere oppbygningen av dokumentasjonen. Det vil etterhvert komme mer informasjon, og API-er for flere tjenester.\nBrønnøysundregistrenes elektroniske mottak tilbyr innsending av meldinger gjennom Altinns formidlingstjeneste og innsendingstjeneste.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/itu-utt/",
	"title": "Intet til utlegg/utleggstrekk (ITU/UTT)",
	"tags": [],
	"description": "Beskrivelser av API innen domene ITU/UTT",
	"content": "Scope for APIene i Maskinporten: brreg:losore/utlegg.\nSe sidene under for ønsket API.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/itu-utt/distributor/",
	"title": "ITU/UTT for distributører",
	"tags": [],
	"description": "ITU/UTT API for distributører",
	"content": "Innledning Brønnøysundregistrene tilbyr en begrenset, standardisert maskin-til-maskin-tjeneste (API) som kan benyttes av eksterne partnere for innsyn i utleggsdata fra Løsøregisteret.\nDenne dokumentasjonen viser hvordan eksterne systemer kan integrere seg mot APIet, og hvordan man benytter seg av tjenesten for å hente data.\nSyntetiske testdata Vi har en Excel-fil med syntetiske testdata for personer/virksomheter som det er registrert saker på i tjenestens testmiljø. Alt er oppkonstruert, både personer, virksomheter og saker. Merk at avvik mellom filen og respons fra tjenesten kan forekomme over tid, ettersom tjenesten oppdateres fortløpende.\nAPI-referanse Denne tjenesten tilbyr opplysninger om:\nIntet til utlegg og utleggstrekk på fødselsnummer/d-nummer Intet til utlegg på organisasjonsnummer Swagger-dokumentasjon (last ned Swagger-UI og utforsk linken)\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger.\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:losore/utlegg Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nSe veiledning for integrasjon mot Maskinporten.\nRegelverk: Hjemler for tilgjengeliggjøring av data fra Brønnøysundregistrene.\nGrensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/utlegg/personer/{fnr/dnr}?sokers_orgnummer={orgnr} Hent opplysninger om intet til utlegg og utleggstrekk på et fødselsnummer eller d-nummer. GET https://{domene}/utlegg/enheter/{orgnr}?sokers_orgnummer={orgnr} Hent opplysninger om intet til utlegg på et organisasjonsnummer. Domener:\nFor testmiljø (ppe): https://losoreregisteret.ppe.brreg.no For prod: https://losoreregisteret.brreg.no Oppslag på fødselsnummer/d-nummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et fødselsnummer eller d-nummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive intet til utlegg og utleggstrekk på fødselsnummer eller d-nummer.\nRequest Tar i mot et fødselsnummer eller d-nummer som del av URL, med obligatorisk path-parameter sokers_orgnummer som inneholder organisasjonsnummeret til sluttbruker som oppslaget gjøres på vegne av.\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, og dette orgnummeret skal være gyldig samt ha en gyldig avtale om å kunne hente ut utlegg. Forespørselen skal alltid inneholde fødselsnummer eller d-nummer på den det gjøres oppslag på. Dersom forespørselen inneholder et fødselsnummer eller d-nummer som ikke er lovlig oppbygd, returneres det en feilmelding. Forespørselen skal alltid inneholde organisasjonsnummeret til sluttbruker/den som gjør oppslag. Det sjekkes at sluttbrukers organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om intet til utlegg og utleggstrekk.\nEksempelrespons for oppslag på fødselsnummer/d-nummer { \u0026#34;utleggResponseDistributor\u0026#34;: { \u0026#34;antallITU\u0026#34;: 1, \u0026#34;antallUTT\u0026#34;: 2, \u0026#34;utlegg\u0026#34;: [ { \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2018-09-04\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2018-09-04\u0026#34; }, { \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2018-07-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2018-08-01\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 500.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2018-08-01\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2020-08-10\u0026#34; }, { \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2018-06-10\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2018-08-08\u0026#34;, \u0026#34;trekkprosent\u0026#34;: 17.0, \u0026#34;periodeStart\u0026#34;: \u0026#34;2018-07-13\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2020-07-13\u0026#34; } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } } Oppslag på organisasjonsnummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et organisasjonsnummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive intet til utlegg på organisasjonsnummeret.\nRequest Tar i mot et organisasjonsnummer som del av URL, med obligatorisk path-parameter sokers_orgnummer som inneholder organisasjonsnummeret til sluttbruker som oppslaget gjøres på vegne av.\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, skal være gyldig, samt ha en gyldig avtale om å kunne hente ut utlegg. Forespørselen skal alltid inneholde organisasjonsnummer på det foretaket det gjøres oppslag mot. Dersom forespørselen inneholder et organisasjonsnummer som ikke er lovlig oppbygd, returneres det en feilmelding. Forespørselen skal alltid inneholde organisasjonsnummeret til sluttbruker/den som gjør oppslag. Det sjekkes at sluttbrukers organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om intet til utlegg.\nEksempelrespons for oppslag på organisasjonsnummer { \u0026#34;utleggResponseDistributor\u0026#34;: { \u0026#34;antallITU\u0026#34;: 1, \u0026#34;antallUTT\u0026#34;: 1, \u0026#34;utlegg\u0026#34;: [ { \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-01-10\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2020-01-16\u0026#34; }, { \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2021-08-25\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2021-08-31\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 43022.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2021-08-25\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2023-08-25\u0026#34; } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } } Eksempelrespons for oppslag på slettet organisasjonsnummer { \u0026#34;utleggResponseDistributor\u0026#34;: { \u0026#34;antallITU\u0026#34;: 1, \u0026#34;antallUTT\u0026#34;: 0, \u0026#34;utlegg\u0026#34;: [ { \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2019-09-02\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2020-08-13\u0026#34; } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;Organisasjonsnummer er slettet\u0026#34; } } Feilmeldinger Dersom det ikke finnes noen utlegg, eller ved ugyldig input, vil det gis melding om dette i JSON-responsen. Dette ligger i form av en array meldinger.\nEksempelrespons uten utlegg { \u0026#34;antallITU\u0026#34;: 0, \u0026#34;antallUTT\u0026#34;: 0, \u0026#34;utlegg\u0026#34;: [], \u0026#34;meldinger\u0026#34;: [ \u0026#34;Det er ikke registrert opplysninger om intet til utlegg på dette fødselsnummeret/d-nummeret\u0026#34;, \u0026#34;Det er ikke registrert opplysninger om utleggstrekk på dette fødselsnummeret/d-nummeret\u0026#34; ], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } Eksempelrespons feilmelding { \u0026#34;feilId\u0026#34;: \u0026#34;7d10f7d9-e2a3-4ab6-9ee2-90ccbf12eeef\u0026#34;, \u0026#34;feilkode\u0026#34;: \u0026#34;UAE_002\u0026#34;, \u0026#34;feiltype\u0026#34;: \u0026#34;VALIDERING\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Feil innhold i request\u0026#34;, \u0026#34;detaljer\u0026#34;: \u0026#34;Ugyldig fødselsnummer/d-nummer\u0026#34; } Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format.\nHTTP-kode Feilmelding 400 Søkers organisasjonsnummer mangler 400 Søkers organisasjonsnummer er ugyldig 400 Ugyldig organisasjonsnummer 400 Organisasjonsnummer er slettet 400 Ugyldig fødselsnummer/d-nummer 403 Forespørsel inneholder ingen gyldig bearer token 404 Organisasjonsnummer mangler 404 Fødselsnummer/d-nummer mangler HTTP-statuskoder Oversikt over HTTP-statuskoder i APIet.\nHTTP-kode Beskrivelse 200 OK Henting av data gikk bra 400 Bad Request Feil i spørring. Applikasjonen vil gi en detaljert feilmelding for hva som er feil med spørring 403 Forbidden Feil ved autentisering eller autorisering. Bearer tokenet som ble sendt inn er ikke gyldig eller har ikke en gyldig avtale om utlegg 404 Not Found Applikasjonen vil gi en detaljert feilmelding for hva som ikke ble funnet. Kan også bety at man bruker feil adresse for tjenesten (i så fall vil man få en standard \u0026ldquo;404 NOT FOUND\u0026rdquo; og ikke et svar fra applikasjonen) 500 Internal Server Error Feil på server side, for eksempel at en underliggende datakilde ikke svarer Ordliste Definisjoner på begrep som er brukt i denne dokumentasjonen.\nBegrep Definisjon API Programmeringsgrensesnitt HTTP Datakommunikasjonsstandard HTTP-statuskoder Statuskoder for datakommunikasjonsstandard REST Datakommunikasjonmønster JSON Åpen standard for dataformat D-nummer Identifikasjonsnummer tildeles personer med midlertidig tilknytning til Norge, det vil si som ikke er bosatt i Norge. Består av en modifisert sekssifret fødselsdato og et femsifret personnummer. Fødselsdatoen modifiseres ved at det legges til 4 på det første sifferet. Fødselsnummer Identifikasjonsnummer fra folkeregistret og består av 11 siffer Personidentifikator Fødselsnummer eller d-nummer Organisasjonsnummer Identifikasjonsnummer for virksomhet Utlegg Intet til utlegg og utleggstrekk ITU Intet til utlegg UTT Utleggstrekk Aktive Med aktive menes de utleggstrekkene eller intet til utlegg som har status GO (godkjent) "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/itu-utt/kredittopplysningsforetak/",
	"title": "ITU/UTT for kredittopplysningsforetak",
	"tags": [],
	"description": "ITU/UTT API for kredittopplysningsforetak",
	"content": "Innledning Brønnøysundregistrene tilbyr en begrenset, standardisert maskin-til-maskin-tjeneste (API) som kan benyttes av eksterne partnere for innsyn i utleggsdata fra Løsøregisteret.\nDenne dokumentasjonen viser hvordan eksterne systemer kan integrere seg mot APIet, og hvordan man benytter seg av tjenesten for å hente data.\nSyntetiske testdata Vi har en Excel-fil med syntetiske testdata for personer/virksomheter som det er registrert saker på i tjenestens testmiljø. Alt er oppkonstruert, både personer, virksomheter og saker. Merk at avvik mellom filen og respons fra tjenesten vil forekomme over tid, ettersom tjenesten oppdateres fortløpende.\nAPI-referanse Denne tjenesten tilbyr opplysninger om:\nIntet til utlegg og utleggstrekk for fødselsnummer/d-nummer Endringslogg for utleggsdata Totalbestand for utleggsdata Swagger-dokumentasjon (last ned Swagger-UI og utforsk linken)\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger.\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:losore/utlegg Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nSe veiledning for integrasjon mot Maskinporten.\nRegelverk: Hjemler for tilgjengeliggjøring av data fra Brønnøysundregistrene.\nGrensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/utlegg/personer-utvidet/{fnr/dnr} Hent detaljerte opplysninger om intet til utlegg og utleggstrekk for et fødselsnummer/d-nummer. GET https://{domene}/utlegg/endringslogg/{timestamp} Hent endringslogg (alle endringer i intet til utlegg og utleggstrekk) for alle fødselsnummer/d-nummer og organisasjonsnummer GET https://{domene}/utlegg/endringslogg/enheter/{timestamp} Hent endringslogg (alle endringer i intet til utlegg) for alle organisasjonsnummer etter timestamp. GET https://{domene}/utlegg/totalbestand/{timestamp} Hent totalbestand (alle aktive intet til utlegg og utleggstrekk) for alle fødselsnummer/d-nummer og organisasjonsnummer GET https://{domene}/utlegg/totalbestand/enheter/{timestamp} Hent totalbestand (alle aktive intet til utlegg) for alle organisasjonsnummer Domener:\nFor testmiljø (ppe): https://losoreregisteret.ppe.brreg.no For prod: https://losoreregisteret.brreg.no Oppslag på fødselsnummer eller d-nummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et fødselsnummer eller d-nummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive intet til utlegg og utleggstrekk på fødselsnummer eller d-nummer.\nRequest Tar i mot et fødselsnummer eller d-nummer som del av URL.\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepart sitt orgnummer og dette orgnummeret skal være gyldig, samt ha en gyldig avtale om å kunne hente ut utlegg. Forespørselen skal alltid inneholde fødselsnummer eller d-nummer på den det gjøres oppslag på. Dersom forespørselen inneholder et fødselsnummer eller d-nummer som ikke er lovlig oppbygd, returneres det en feilmelding. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om intet til utlegg og utleggstrekk. Der aktør er person vil responsen inneholde navn på vedkommende.\nEksempelrespons for oppslag på fødselsnummer eller d-nummer { \u0026#34;utleggResponseKredittforetak\u0026#34;: { \u0026#34;antallITU\u0026#34;: 1, \u0026#34;antallUTT\u0026#34;: 1, \u0026#34;utlegg\u0026#34;: [ { \u0026#34;ubnr\u0026#34;: 20202000000006, \u0026#34;ubmeldnr\u0026#34;: 1, \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-01-10\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2020-01-16\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;52125501648\u0026#34;, \u0026#34;fornavn\u0026#34;: \u0026#34;GRETE\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;KASPERSEN\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810304642\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810305282\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810305002\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20202000000256, \u0026#34;ubmeldnr\u0026#34;: 1, \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2021-08-25\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2021-08-31\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 43022.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2021-08-25\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2023-08-25\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;52125501648\u0026#34;, \u0026#34;fornavn\u0026#34;: \u0026#34;GRETE\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;KASPERSEN\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810304642\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810305282\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810305002\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } } Endringslogg: Oppslag på endringer for alle fødselsnummer/d-nummer og organisasjonsnummer Beskrivelse Tjenesten tar imot en forespørsel hvor det er oppgitt et timestamp (yyyy-MM-dd'T'HH:mm:ss.SSS), og returnerer alle endringer som er registrert kronologisk etter oppgitt timestamp.\nResponsen er paginert, og inneholder metadata om bl.a. timestamp for siste element i responsen, slik at man kan bruke dette som input til å hente neste side med resultater ved å bruke verdien fra feltet datoSistEndret fra forrige respons som spørreparameter.\nMaksimalt antall meldinger som returneres per forespørsel er 1000, og dette regnes som én side med resultater. Dette vil ofte ikke gi alle endringer på en dag, men lenke til neste side leveres i responsen så lenge det er flere sider.\nDersom timestamp i forespørselen er eldre enn 45 dager, returneres det en feilmelding.\nRequest Tar i mot en forespørsel hvor det er oppgitt et timestamp som del av URL.\nResponse Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format. Tjenesten tilbyr to endepunkt som inneholder opplysninger om henholdsvis:\nIntet til utlegg og utleggstrekk for fødselsnummer/d-nummer og organisasjonsnummer Intet til utlegg for organisasjonsnummer. Siste timestamp returneres som en del av responsen, slik at dette kan benyttes for å kontrollere om man har fått alt, samt som input i neste forespørsel.\nEksempelrespons for Endringslogg: Oppslag på endringer for alle fødselsnummer/d-nummer og organisasjonsnummer { \u0026#34;endringsloggResponseKredittforetak\u0026#34;: { \u0026#34;antallITU\u0026#34;: 3, \u0026#34;antallUTT\u0026#34;: 3, \u0026#34;datoSistEndret\u0026#34;: \u0026#34;2022-04-08T15:10:16.277149\u0026#34;, \u0026#34;endringslogg\u0026#34;: [ { \u0026#34;ubnr\u0026#34;: 20293000009140, \u0026#34;ubmeldnr\u0026#34;: 19, \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 2500.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2020-03-31\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2024-07-13\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;2\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009139, \u0026#34;ubmeldnr\u0026#34;: 19, \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009139, \u0026#34;ubmeldnr\u0026#34;: 20, \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009140, \u0026#34;ubmeldnr\u0026#34;: 20, \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 2500.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2020-03-31\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2024-07-13\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;2\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009139, \u0026#34;ubmeldnr\u0026#34;: 21, \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009140, \u0026#34;ubmeldnr\u0026#34;: 21, \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 2500.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2020-03-31\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2024-07-13\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;2\u0026#34; } ] } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } } Totalbestand: Oppslag på alle aktive utlegg for fødselsnummer/d-nummer og organisasjonsnummer Beskrivelse Tjenesten tar imot en forespørsel hvor det er oppgitt et timestamp (yyyy-MM-dd'T'HH:mm:ss.SSS), og returnerer alle aktive utlegg som er registrert kronologisk etter oppgitt timestamp, som er eldre enn to dager gamle. Responsen er paginert, og inneholder metadata om bl.a. timestamp for siste element i responsen, slik at man kan bruke dette som input til å hente neste side med resultater, eller ved overgang til å konsumere endringslogg-endepunktet for å få de nyeste elementene.\nMaksimalt antall meldinger som returneres per forespørsel er 1000, og dette regnes som én side med resultater. Dette vil ikke være hele totalbestanden, men lenke til neste side leveres i responsen så lenge det er flere sider.\nRequest Tar i mot en forespørsel hvor det oppgis et timestamp som del av URL.\nTjenesten kalles initielt uten timestamp for å få de første 1000 elementene, og for å iterativt hente neste side med resultater bruker man verdien fra feltet datoSistEndret fra forrige respons som spørreparameter. Alternativt kan man benytte lenken til neste side som returneres som eget felt.\nResponse Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format. Tjenesten tilbyr to endepunkt som inneholder opplysninger om henholdsvis:\nIntet til utlegg og utleggstrekk for fødselsnummer/d-nummer og organisasjonsnummer, Intet til utlegg for organisasjonsnummer. Siste timestamp er en del av responsen.\nEksempelrespons for Totalbestand: Oppslag på alle aktive utlegg for fødselsnummer/d-nummer og organisasjonsnummer { \u0026#34;totalbestandResponseKredittforetak\u0026#34;: { \u0026#34;antallITU\u0026#34;: 1, \u0026#34;antallUTT\u0026#34;: 1, \u0026#34;datoSistEndret\u0026#34;: \u0026#34;2022-04-08T15:10:16.277149\u0026#34;, \u0026#34;totalbestand\u0026#34;: [ { \u0026#34;ubnr\u0026#34;: 20293000009139, \u0026#34;ubmeldnr\u0026#34;: 21, \u0026#34;utleggstype\u0026#34;: \u0026#34;ITU\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;1\u0026#34; } ] }, { \u0026#34;ubnr\u0026#34;: 20293000009140, \u0026#34;ubmeldnr\u0026#34;: 21, \u0026#34;utleggstype\u0026#34;: \u0026#34;UTT\u0026#34;, \u0026#34;avholdtForretning\u0026#34;: \u0026#34;2020-03-30\u0026#34;, \u0026#34;innfortILosoreregisteret\u0026#34;: \u0026#34;2022-04-08\u0026#34;, \u0026#34;trekkbelop\u0026#34;: 2500.00, \u0026#34;trekkvaluta\u0026#34;: \u0026#34;NOK\u0026#34;, \u0026#34;periodeStart\u0026#34;: \u0026#34;2020-03-31\u0026#34;, \u0026#34;periodeSlutt\u0026#34;: \u0026#34;2024-07-13\u0026#34;, \u0026#34;aktorer\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøkt\u0026#34;, \u0026#34;personidentifikator\u0026#34;: \u0026#34;04021850530\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Namsmyndighet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843012\u0026#34;, \u0026#34;saksnummer\u0026#34;: \u0026#34;1\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Saksøker\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844442\u0026#34; }, { \u0026#34;rolletype\u0026#34;: \u0026#34;Prosessfullmektig\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810843942\u0026#34;, \u0026#34;referansenummer\u0026#34;: \u0026#34;2\u0026#34; } ] } ], \u0026#34;meldinger\u0026#34;: [], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } } Timestamp rundt sommer/vintertid Timestamps som lagres i databasen er omgjort fra tidssonen man er i når det lagres til UTC, og så omgjort tilbake til tidssonen man er i under uthenting på veien ut igjen. Dette vil føre til noen gotchas rundt overgangen sommer(UTC +2) og vinter(UTC +1) tid, begge veier.\nNB: Dette gjelder ikke kun i de tilfellene der man spør rett rundt overgangen (minuttet før og så minuttet etter), men i alle tilfeller der man har hentet ut data før overgangen og neste query blir gjort etter overgangen. Uavhengig av hvor lenge før og etter.\nDet man må gjøre er å \u0026ldquo;huske\u0026rdquo; hvilken tidssone man gjorde forrige request i og så justere basert på hvilken tidssone man er i når man gjør neste request. Og generelt holde seg unna å gjøre request rundt en time før/etter overgangen, for å hindre at den justeringen man gjør treffer på feil side av overgangen.\nF.eks:\nMan gjør et oppslag rett før overgangen sommer til vintertid. Dette gir f.eks. ut et resultset hvor neste page har timestamp 2020-10-25T02:59:00.000 (Som er lagret som 2020-10-25T00:59:00.000 og så justert til sommertid på veien opp). Så gjør man neste query rett etter overgangen til vintertid. Da vil 2020-10-25T02:59:00.000 justeres til UTC basert på vintertid og man leter i databasen etter timestamp 2020-10-25T01:59:00.000 Dette vil derfor føre til at man går glipp av alle innslag som er registrert mellom 2020-10-25T00:59:00.000 og 2020-10-25T01:59:00.000 i databasen.\nEksempler:\nOvergang Lagret i databasen (UTC) Det man får ut Blir justert til i neste søk etter overgang (UTC) Feil Timestamp-justering man må bruke Sommer til vinter 2020-10-25T00:59:00.000 2020-10-25T02:59:00.000 (UTC +2) 2020-10-25T01:59:00.000 (Trekker fra 1 time pga nå UTC +1) Hopper over en time med innslag 2020-10-25T01:59:00.000 Vinter til sommer 2020-03-29T00:59:00.000 2020-03-29T01:59:00.000 (UTC +1) 2020-03-28T23:59:00.000 (Trekker fra 2 timer pga nå UTC +2) Får med innslag man allerede har hentet ut 2020-03-29T02:59:00.000 Feilmeldinger Dersom det ikke finnes noen ITU/UTT, eller ved ugyldig input, vil det gis melding om dette i JSON-responsen. Dette ligger i form av en array meldinger.\nEksempelrespons uten utlegg { \u0026#34;antallITU\u0026#34;: 0, \u0026#34;antallUTT\u0026#34;: 0, \u0026#34;utlegg\u0026#34;: [], \u0026#34;meldinger\u0026#34;: [ \u0026#34;Det er ikke registrert opplysninger om intet til utlegg på dette fødselsnummeret/d-nummeret\u0026#34;, \u0026#34;Det er ikke registrert opplysninger om utleggstrekk på dette fødselsnummeret/d-nummeret\u0026#34; ], \u0026#34;tilleggsinfo\u0026#34;: \u0026#34;\u0026#34; } Eksempelrespons feilmelding { \u0026#34;feilId\u0026#34;: \u0026#34;7d10f7d9-e2a3-4ab6-9ee2-90ccbf12eeef\u0026#34;, \u0026#34;feilkode\u0026#34;: \u0026#34;UAE_002\u0026#34;, \u0026#34;feiltype\u0026#34;: \u0026#34;VALIDERING\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Feil innhold i request\u0026#34;, \u0026#34;detaljer\u0026#34;: \u0026#34;Ugyldig fødselsnummer/d-nummer\u0026#34; } Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format.\nHTTP-kode Feilmelding 400 Ugyldig fødselsnummer/d-nummer 400 Ugyldig timestamp oppgitt 403 Forespørsel inneholder ingen gyldig bearer token 404 Fødselsnummer/d-nummer mangler 404 Timestamp-parameter til Endringslogg er eldre enn 45 dager 404 Fant ingen meldinger som er eldre enn oppgitt timestamp HTTP-statuskoder Oversikt over HTTP-statuskoder i APIet.\nHTTP-kode Beskrivelse 200 OK Henting av data gikk bra 400 Bad Request Feil i spørring. Applikasjonen vil gi en detaljert feilmelding for hva som er feil med spørring 403 Forbidden Feil ved autentisering eller autorisering. Bearer tokenet som ble sendt inn er ikke gyldig eller har ikke en gyldig avtale om utlegg 404 Not Found Applikasjonen vil gi en detaljert feilmelding for hva som ikke ble funnet. Kan også bety at man bruker feil adresse for tjenesten (i så fall vil man få en standard \u0026ldquo;404 NOT FOUND\u0026rdquo; og ikke et svar fra applikasjonen) 500 Internal Server Error Feil på server side, for eksempel at en underliggende datakilde ikke svarer Ordliste Definisjoner på begrep som er brukt i denne dokumentasjonen.\nBegrep Definisjon API Programmeringsgrensesnitt HTTP Datakommunikasjonsstandard HTTP-statuskoder Statuskoder for datakommunikasjonsstandard REST Datakommunikasjonmønster JSON Åpen standard for dataformat D-nummer Identifikasjonsnummer tildeles personer med midlertidig tilknytning til Norge, det vil si som ikke er bosatt i Norge. Består av en modifisert sekssifret fødselsdato og et femsifret personnummer. Fødselsdatoen modifiseres ved at det legges til 4 på det første sifferet. Fødselsnummer Identifikasjonsnummer fra folkeregistret og består av 11 siffer Personidentifikator Fødselsnummer eller d-nummer Organisasjonsnummer Identifikasjonsnummer for organisasjon Utlegg Intet til utlegg og utleggstrekk ITU Intet til utlegg UTT Utleggstrekk Aktive Med aktive menes de utleggstrekkene eller intet til utlegg som har status GO (godkjent) Endringslogg Endringsinformasjon (nye/slettede/endrede) om intet til utlegg og utleggstrekk. Det er bare kredittopplysningsforetak som kan abonnere på endringslogg. De har hjemmel for abonnement i utleggsregisterforskriftens § 3, jf tinglysningslovens § 34 a. Totalbestand Alle aktive saker (utleggstrekkene/intet til utlegg som har status GO) om intet til utlegg og utleggstrekk. Det er bare kredittopplysningsforetak som kan be om å få hente totalbestand. De har hjemmel for abonnement i utleggsregisterforskriftens § 3, jf tinglysningslovens § 34 a. "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/ektepaktregisteret/kodeliste/",
	"title": "Kodeliste",
	"tags": [],
	"description": "Kodeliste for Ektepaktregisteret",
	"content": "Kodeliste for ektepaktregisteret finnes her i denne Excel-filen\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/kodeliste/",
	"title": "Kodeliste",
	"tags": [],
	"description": "Kodeliste for Løsøreregisteret",
	"content": "Kodeliste for løsøreregisteret finnes her i denne Excel-filen\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/komme-i-gang/",
	"title": "Komme i gang",
	"tags": [],
	"description": "Komme i gang med å ta i bruk tjenester for Register over reelle rettighetshavere",
	"content": "Innledning Denne siden gir praktisk informasjon om hvordan du kjapt kommer i gang med å ta i bruk tjenester for Register over reelle rettighetshavere.\nNår det gjelder våre tilgangsstyrte tjenester vil du få informasjon om hvem som kan få tilgang og hvordan du kan bestille tilgang.\nVidere vil vi beskrive hvordan du skal forholde deg til maskinporten som mekanisme for autentisering/autorisasjon for tjenestene.\nHvem kan få tilgang til tilgangsstyrte tjenester? Nedenfor ser du hvilke aktører som i følge forskrift til lov om register over reelle rettighetshavere eller hvitvaskingsloven vil være berettiget til å få tilgang til våre tjenester.\nOffentlige myndigheter nevnt i forskriften § 3-11: Lovdata - Forskrift til lov om register over reelle rettighetshavere\na) politi- og påtalemyndighet\nb) enheten for finansiell etterretning ansvarlig for å motta opplysninger om mistenkelige forhold etter hvitvaskingsloven § 26\nc) skattemyndigheter\nd) tilsynsmyndigheter for rapporteringspliktige etter hvitvaskingsregelverket\ne) andre myndigheter med ansvar for å etterforske og påtale hvitvasking, primærforbrytelser og terrorfinansiering\nf) andre myndigheter med ansvar for sporing, båndlegging og inndragning av utbytte\ng) sikkerhetsmyndigheten\nh) tilsynsmyndighet for stiftelser\nRapporteringspliktige etter hvitvaskingsloven § 4 første ledd bokstav a, b, c, e, g, h til k, n og o: a) bank\nb) kredittforetak\nc) finansieringsforetak\ne) e-pengeforetak\ng) betalingsforetak og andre som har rett til å yte betalingstjenester\nh) verdipapirforetak\ni) forvaltningsselskap for verdipapirfond\nj) forsikringsforetak\nk) foretak som driver forsikringsformidling som ikke er gjenforsikringsmegling\nn) forvalter av alternative investeringsfond\no) låneformidlingsforetak\nHvordan bestiller jeg tilgang til tjenester? Hvis du vurderer at din virksomhet oppfyller kriteriene for å få tilgang til våre tilgangsstyrte tjenester må du sende en epost til opendata.rrh@brreg.no. I eposten opplyser du om følgende:\nOrganisasjonsnummer for din virksomhet Navn, epost-adresse og telefonnummer for kontaktperson Hvilken hjemmel til utvidet tilgang virksomheten faller inn under (se over for informasjon om hvem som kan få tilgang). Hvis tilgangen gjelder testmiljø må du i tillegg oppgi hvilken ip-adresse dere kommer fra da tjenestene i test har ip-filtrering. Jeg har fått tilgang, hva gjør jeg nå? Når du har fått en bekreftelse fra Brønnøysundregistrene om at du har fått tilgang til våre tjenester vil neste steg være å gjennomføre nødvendige bestillinger og oppsett i maskinporten.\nVi har laget en kortfattet veiledning for integrasjon mot maskinporten.\nVi forutsetter at du i tillegg til å lese vår veiledning grundig setter deg inn i Digdir sin egen dokumentasjon for maskinporten.\nTa i bruk tjenestene Når du har fått tilgang fra Brønnøysundregistrene, og du har gjennomført nødvendige bestillinger og oppsett av klient i maskinporten er du klar til å benytte våre tjenester.\nDet naturlige neste steget er å sette deg inn i API-dokumentasjonen. Du kan feks finne dokumentasjon for Oppslagstjenester her.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/oppslagstjenester/virksomheter/loesningsmodell/",
	"title": "Løsningsmodell",
	"tags": [],
	"description": "Løsningsmodell for tilgangsstyrt API.",
	"content": "\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/ektepaktregisteret/loesningsmodeller/",
	"title": "Løsningsmodeller",
	"tags": [],
	"description": "Løsningsmodeller for Ektepaktregisteret",
	"content": "Løsningsmodeller for Ektepaktregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/loesoereregisteret/loesningsmodeller/",
	"title": "Løsningsmodeller",
	"tags": [],
	"description": "Løsningsmodeller for Løsøreregisteret",
	"content": "Løsningsmodeller for Løsøreregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/",
	"title": "Løsøreregisteret",
	"tags": [],
	"description": "Beskrivelser av API innen domene Løsøreregisteret",
	"content": "På sidene under finner du informasjon om hvordan du kan bruke våre API for å hente informasjon som tilgjengeliggjøres fra Løsøreregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/loesoereregisteret/",
	"title": "Løsøreregisteret",
	"tags": [],
	"description": "Informasjonsmodell for Løsøreregisteret",
	"content": "Informasjonsmodeller for Løsøreregisteret.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/oppslagstjenester/",
	"title": "Oppslagstjenester",
	"tags": [],
	"description": "Beskrivelse av oppslagstjenester for Register over reelle rettighetshavere",
	"content": "Register over reelle rettighetshavere tilbyr tjenester for å hente ut data fra registeret. Dette gjelder for eksempel:\nOppslag på organisasjonsnummer for å hente reelle rettighetshavere for en virksomhet Søk på fødselsnummer for å finne ut i hvilke virksomheter personen er registrert som reell rettighetshaver Nedlasting av totalbestand på fil "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/",
	"title": "Register over reelle rettighetshavere",
	"tags": [],
	"description": "Informasjonsmodell for Register over reelle rettighetshavere",
	"content": "På sidene under finner du forretningsprosessmodeller og strukturmodeller for Register over reelle rettighetshavere.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/",
	"title": "Rettsstiftelse",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Se sidene under for ønsket API.\n"
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/reelle-rettighetshavere/strukturmodell/",
	"title": "Strukturmodell",
	"tags": [],
	"description": "Strukturmodell for Register over Reelle rettighetshavere",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/enhetsregisteret/strukturmodeller/",
	"title": "Strukturmodeller",
	"tags": [],
	"description": "Strukturmodeller for Enhetsregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/informasjonsmodeller/foretaksregisteret/strukturmodeller/",
	"title": "Strukturmodeller",
	"tags": [],
	"description": "Strukturmodeller for Foretaksregisteret",
	"content": " "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/oppslagstjenester/virksomheter/testdata_for_tilgangsstyrt_api/",
	"title": "Testdata",
	"tags": [],
	"description": "Testdata for Tilgangsstyrt API.",
	"content": "Beskrivelse Her er en oversikt over testdata i vårt testmiljø. Testmiljøet kan inneholde flere registreringer enn de beskrevet under,\nog man kan derfor få flere registreringer i et totalbestanduttrekk.\nForekomst Org.nr. Navn Fødselsnummer/D-nummer Fødselsdato Fornavn Mellomnavn Etternavn Fullt navn Er død? Statsborgerskap Bostedsland Posisjontype Eier Størrelseintervall Grunnlag Posisjontype Kontroll Størrelseintervall Grunnlag Posisjontype Rett til å utpeke/avsette styre Grunnlag Kan ikke identifisere flere reelle rettighetshavere Har ikke reelle rettighetshavere, norsk eier Har ikke reelle rettighetshavere, utenlandsk eier Offentlig virksomhet eier over 75 % Utenlandsk virksomhet Kan ikke identifisere reelle rettighetshavere Kontroll på annen måte Beskrivelse kontroll på annen måte Unntatt innsyn (Nummer) organisasjonsnummer (Navn) foedselsEllerDNummer foedselsdato \u0026ldquo;fornavn\u0026rdquo; \u0026ldquo;mellomnavn\u0026rdquo; \u0026ldquo;etternavn\u0026rdquo; \u0026ldquo;fulltNavn\u0026rdquo; erDoed \u0026ldquo;statsborgerskap\u0026rdquo; Bostedsland posisjontype.eier stoerrelseIntervall \u0026ldquo;grunnlag\u0026rdquo; posisjontype.kont stoerrelseIntervall \u0026ldquo;grunnlag\u0026rdquo; posisjontype.ruas \u0026ldquo;grunnlag\u0026rdquo; reellerettighetshaverestatus.nrki reellerettighetshaverestatus.rknv reellerettighetshaverestatus.rkuv (Offentlig virksomhet eier over 75 %) (Utenlandsk virksomhet) reellerettighetshaverestatus.irki posisjontype.anne beskrivelseAnnenMaate erUnntattFraInnsyn 1 314270320 TRÅDLØS MATT TIGER AS SANN 2 313513580 OVERSIKTLIG HELLIG TIGER AS SANN SANN 3 310163449 SENTRAL UKLAR PUMA SANN SANN SANN 4 313513408 FALSK ØDE TIGER AS 059102-98382 STOLT EFFEKTIV null PARASOLL USANN Norge, Mexico Norge SANN 50-74,99 % Direkte, Indirekte 4 313513408 FALSK ØDE TIGER AS 588771-02163 MINIMALISTISK null HANDLELISTE USANN Montserrat Norge SANN 75-100 % Direkte, Indirekte 4 313513408 FALSK ØDE TIGER AS 01.12.1983 TOM NELSON Sverige Sverige SANN Enighet eller avtale 4 313513408 FALSK ØDE TIGER AS 24.03.1983 GILL BATES Tyskland, USA, Sverige USA SANN Forklaring på hvilken innflytelse rettighetshaveren har - annen måte. 5 313842568 OPPFARENDE KORT TIGER AS 588771-02163 MINIMALISTISK null HANDLELISTE USANN Montserrat Sverige SANN 50-74,99 % Direkte, Indirekte SANN 75-100 % Direkte, Enighet eller avtale 5 313842568 OPPFARENDE KORT TIGER AS 418640-00647 HEVNGJERRIG null SERVIETT USANN Norge Sverige SANN 25,01-49,99 % Indirekte 6 310956643 GEOMETRISK VEIK TIGER AS 059102-98382 STOLT EFFEKTIV null STOLT EFFEKTIV PARASOLL USANN Norge, Mexico Norge SANN 50-74,99 % Direkte SANN 6 310956643 GEOMETRISK VEIK TIGER AS 418640-00647 HEVNGJERRIG null SERVIETT USANN Norge Norge SANN 25,01-49,99 % Indirekte SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 279100-96945 AKROBATISK DRIFTIG MOR DESIMAL null DESIMAL USANN Norge, Kambodsja Sverige SANN 50-74,99 % Direkte, Enighet eller avtale SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 159100-98079 KOMPATIBEL GJESTFRI null KOMPATIBEL GJESTFRI NIESE USANN Norge, Finland Storbritannia SANN 25,01%-49,99% Indirekte SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 658527-00291 GOD FORVENTNING null GOD FORVENTNING USANN Norge Sverige SANN Enighet eller avtale SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 288300-97890 SLAPP HYGGELIG null VALMUE USANN Norge, Sveits Storbritannia SANN 25,01%-49,99% Direkte SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 528252-00223 SORGLØS EKSAKT null STRØMPEBUKSE USANN Norge Storbritannia SANN SANN TEST - Posisjon kontroll på en annen måte 7 310219622 STOLT UMUSIKALSK ALLIGATOR 069099-97850 HYPPIG STANDHAFTIG INNDELING EDDERKOPP USANN Norge, Honduras Sverige SANN 50-74,99 % Direkte, Indirekte SANN 75-100 % Direkte, Enighet eller avtale SANN SANN TEST - TEST - TEST - TEST 7 310219622 STOLT UMUSIKALSK ALLIGATOR 158300-97489 LITEN MOBIL null GASSPEDAL USANN Norge, Estland Storbritannia SANN 25,01%-49,99% Indirekte SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 598793-00422 INTERNASJONAL EVENTYRLIG KELNER KLAPPSTOL USANN Norge Sverige SANN 75-100 % Indirekte, Enighet eller avtale SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 588771-02163 MINIMALISTISK null HANDLELISTE USANN Montserrat Sverige SANN 25,01%-49,99% Indirekte SANN 7 310219622 STOLT UMUSIKALSK ALLIGATOR 04.04.2004 Test Hansen Sverige, Storbritannia Sverige SANN 75-100 % Indirekte, Enighet eller avtale SANN SANN 8 312502658 KLAR FORNUFTIG TIGER AS 24.03.1983 GILL BATES Tyskland, USA, Sverige USA SANN 25,01%-49,99% Direkte SANN 75-100 % Direkte, Indirekte 8 312502658 KLAR FORNUFTIG TIGER AS 588771-02163 ORANSJE null BALLONG USANN Norge Sverige SANN 25,01%-49,99% Direkte SANN 50-74,99 % Direkte, Enighet eller avtale 9 311685678 MUNTER NORMAL TIGER AS 269202-96504 KORT FORNØYD DEIG SKYVEDØR USANN Norge, Uruguay Norge SANN Enighet eller avtale 9 311685678 MUNTER NORMAL TIGER AS 168468-95403 TØFF null TØFF SYSTEM USANN Norge Sverige SANN 25,01%-49,99% Indirekte 9 311685678 MUNTER NORMAL TIGER AS 04.04.2004 Karl Gustav Medelsvensson Sverige, Sveits Sverige SANN TEST - Posisjon kontroll på en annen måte. SANN 10 210204822 KUNNSKAPSRIK EVIG HUND DA 289231-48452 BESTEMT null PLASMA USANN Norge Sverige SANN 75-100 % Direkte SANN "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/elektronisk-mottak/maskinport-integrasjon/uthenting/",
	"title": "Uthenting av meldinger",
	"tags": [],
	"description": "Beskrivelser av API innen BRs elektroniske mottak av meldinger",
	"content": "Innledning Brønnøysundregistrenes elektroniske mottak har et REST-grensesnitt som kan benyttes av eksterne parter for innsending av meldinger til Brønnøysundregistrene.\nAPIet er utviklet i Java og Spring Boot, men dette skal ikke legge føringer for klienter som tar APIet i bruk.\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger.\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:mottak Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nAccess-tokenet oppgis i headeren Authorization. Husk Bearer før tokenet.\nHeader Verdi Authorization Bearer eyJraWQiOiJjWmswME1rbTVIQzRnN3Z0NmNwUDVGSFpMS0pzdzhmQkFJdUZi\u0026hellip; (forkortet) Grensesnittbeskrivelse Tjenesten benytter seg av standard HTTP GET og POST. Følgende funksjonalitet tilbys for eksterne systemer/brukere:\nHTTP-metode URL Content-type Beskrivelse Sikret med jwt GET https://mottak.brreg.no/outbound/available application/json Lister ut tilgjengelige meldinger (med mottakId) for organisasjonsnummer oppgitt i JWT tokenet JA GET https://mottak.brreg.no/outbound/download?mottakId={mottakId} application/octet-stream Laster ned forsendelse med oppgitt mottakId JA PUT https://mottak.brreg.no/outbound/confirm?mottakId={mottakId} application/json Bekrefter at forsendelse med oppgitt mottakId er lastet ned av klient JA GET https://mottak.brreg.no/outbound/swagger-ui.html#/ Swagger dokumentasjon NEI AVAILABLE Endepunktet /available*` returnerer tilgjengelige forsendelser for organisasjonsnummer som er oppgitt i JWT tokenet.\nResponse Ved 200 OK:\n[ { \u0026#34;mottakId\u0026#34;:\u0026#34;be935814-c7a3-4a9f-8bbc-ac278cbe41d5\u0026#34;, \u0026#34;version\u0026#34;:0, \u0026#34;orgnr\u0026#34;:910514350, \u0026#34;dokumentId\u0026#34;:\u0026#34;be935814-c7a3-4a9f-8bbc-ac278cbe41d5\u0026#34;, \u0026#34;status\u0026#34;:\u0026#34;ready\u0026#34;, \u0026#34;oppdatert\u0026#34;:\u0026#34;2019-09-05T09:43:51.691\u0026#34; } ] DOWNLOAD Endepunktet /download returnerer fil med angitt mottakId. Responsen er en zipfil med melding. MottakId er en UUID.\nResponse Bytestream som APPLICATION_OCTET_STREAM\nCONFIRM Endepunktet /confirm bekrefter forsendelsen med angitt mottakId som nedlastet. Denne forsendelsen vil da ikke lenger fremkomme ved kall til /available. MottakId er en UUID.\nResponse 200 OK ved success.\nFeilmeldinger HTTP-kode Applikasjonsfeilkode Feilmelding 500 Internal Server Error ERROR-00005 Optimistic lock exception. Hvis samme forsendelseinfo blir forsøkt confirmed nedlastet samtidig kan dette skje. I utgangspunktet kan man se bort i fra denne, men å forhindre dette er klientens ansvar. Disse kommer på JSON-formatet:\n{ \u0026#34;feilId\u0026#34;:\u0026#34;72577aa8-0ba1-4424-a310-fd9671547953\u0026#34;, \u0026#34;mottakId\u0026#34;:\u0026#34;fe7234ec-b51f-47d1-a414-5b17123118b3\u0026#34;, \u0026#34;kilde\u0026#34;:\u0026#34;maskinport-agent\u0026#34;, \u0026#34;feilkode\u0026#34;:\u0026#34;ERROR-00005\u0026#34;, \u0026#34;beskrivelse\u0026#34;: \u0026#34;Simultaneous attempt to confirm same file\u0026#34; } I tillegg kommer 401 - Unauthorized ved mangler på Bearer token.\nHTTP-kode header Header-value Forklaring 401 - Unauthorized WWW-Authenticate Bearer realm=\u0026ldquo;unspecified\u0026rdquo;, error=\u0026ldquo;unauthorized\u0026rdquo;, error_description=\u0026ldquo;Full authentication is required to access this resource\u0026rdquo; JWT access token ikke oppgitt i Authorization header i request. 401 - Unauthorized WWW-Authenticate Bearer realm=\u0026ldquo;unspecified\u0026rdquo;, error=\u0026ldquo;invalid_token\u0026rdquo;, error_description=\u0026ldquo;invalid bearer token or wrong scope for bearer token\u0026rdquo; JWT access token er oppgitt, men det er enten ugyldig (utgått, korrupt eller gjeldende for et annet scope en tjenesten krever). "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/oppslagstjenester/virksomheter/",
	"title": "Virksomheter",
	"tags": [],
	"description": "Beskrivelse av tjeneste for oppslag/søk i Register over reelle rettighetshavere",
	"content": "Innledning Brønnøysundregistrene tilbyr en tilgangsstyrt tjeneste som kan benyttes av eksterne konsumenter for oppslag/søk i Register over reelle rettighetshavere.\nOppslagstjenesten kalles \u0026ldquo;Virksomheter\u0026rdquo; pga ved oppslag eller søk vil man få returnert registreringspliktige virksomheter med deres registrerte reelle rettighetshavere.\nDenne dokumentasjonen viser hvordan eksterne systemer kan integrere seg mot API\u0026rsquo;et til tjenesten.\nDenne siden er fortsatt under utvikling.\nAPI-referanse API\u0026rsquo;et tilbyr opplysninger om virksomheter og deres reelle rettighetshavere ved oppslag på organisasjonsnummer, søk på fødsels-/D-nummer, eller ved nedlasting av fil med totalbestand.\nOpplysningene om reelle rettighetshavere inkluderer fullt fødsels- eller D-nummer fra Folkeregisteret.\nAPI\u0026rsquo;et skjermer ikke opplysninger om mindreårige og andre som er unntatt fra innsyn.\nOpenAPI-spesifikasjon kommer snart, vi jobber med å finpusse responsmodellen\nLenker til Swagger-dokumentasjon kommer her.\nTestdata Se underside for testdata. Her finner du organisasjonsnummer du kan bruke bruke i vårt testmiljø og hvilke data du kan forvente å få i retur.\nNB! Vi må ta forbehold om at det kan skje noen endringer i testdata pga pågående intern testing, men målet er at disse testdataene i så stor grad som mulig skal være stabile.\nVersjonering og media typer Se her for flere detaljer om hvordan vi håndterer versjonering for våre tjenester.\nTabellen over endepunkter nedenfor viser hvilke media typer som kan brukes som Accept-header i request.\nHvis du ikke angir Accept-header i request vil du automatisk få en respons basert på nyeste versjon av endepunktet.\nTIPS: Vi anbefaler at dere legger til en Accept-header der dere ber om en konkret versjon, feks application/vnd.brreg.rrh.virksomhet.v1+json;charset=UTF-8.\nDersom vi på et tidspunkt legger ut en ny versjon av API\u0026rsquo;et vil dere da være sikre på at dere får den forespurte versjonen tilbake.\nDere vil på denne måten kontrollert kunne gå over til den nye versjonen når dere er klar for det.\nGrensesnittbeskrivelse Base URL:\nTestmiljø : https://rrh.ppe.brreg.no/api Produksjon: https://rrh.brreg.no/api Navn HTTP-metode Endepunkt Beskrivelse Media typer Oppslag på organisasjonsnummer GET https://{base url}/oppslag/virksomheter/{organisasjonsnummer} Hent en registrert virksomhet med opplysninger om reelle rettighetshavere ved å angi organisasjonsnummer. Responsen inneholder en virksomhet med opplysninger om hvem som er registrert som reelle rettighetshavere på nåværende tidspunkt. application/json;charset=UTF-8 application/vnd.brreg.rrh.virksomhet.v1+json;charset=UTF-8 Søk på fødselsnummer GET https://{base url}/oppslag/virksomheter?foedselsnummer={fødsels- eller D-nummer} Finn registrerte virksomheter der person med angitt fødsels-/D-nummer er reell rettighetshaver. Responsen inneholder en liste over virksomheter der angitt person er registrert som reell rettighetshaver på nåværende tidspunkt. Den angitte personen inngår som en av potensielt flere reelle rettighetshavere for hver virksomhet. application/json;charset=UTF-8 application/vnd.brreg.rrh.virksomhet.liste.v1+json;charset=UTF-8 Last ned totalbestand GET https://{base url}/oppslag/virksomheter/totalbestand Last ned fil som inneholder alle registrerte virksomheter med opplysninger om hvem som er reelle rettighetshavere. Endepunktet returnerer de sist oppdaterte opplysningene om hver virksomhet, og gir ikke ut historiske data. Endepunktet returnerer en ZIP-komprimert JSON-fil. Fil blir oppdatert en gang i døgnet. application/zip application/vnd.brreg.rrh.virksomhet.totalbestand.v1+zip Oppslag på organisasjonsnummer Eksempelrespons for oppslag på organisasjonsnummer Eksempelrespons kommer snart, vi jobber med å finpusse responsmodellen\nSøk på fødselsnummer Eksempelrespons for søk på fødselsnummer Eksempelrespons kommer snart, vi jobber med å finpusse responsmodellen\nLast ned totalbestand Eksempelrespons for totalbestand Eksempelfil for oppslag på totalbestand kommer snart, vi jobber med å finpusse responsmodellen\nHTTP-statuskoder HTTP-kode Beskrivelse 200 OK Henting av data gikk bra 400 Bad Request Feil i spørring. Applikasjonen vil gi en detaljert feilmelding som beskriver hva som er feil med spørringen 403 Forbidden Feil ved autentisering eller autorisering. Bearer-tokenet som ble sendt inn er ikke gyldig eller virksomheten har ikke fått tilgang til scope for tjenesten 404 Not Found Ingen data funnet for angitte parametre. Dette kan feks indikere at virksomheten ikke har registrert reelle rettighetshavere 500 Internal Server Error Intern feil i tjenesten, for eksempel at en underliggende datakilde ikke svarer. Hvis feilen vedvarer kan man ta kontakt med Register over reelle rettighetshavere Ordliste Definisjoner på begrep som er brukt i denne dokumentasjonen.\nBegrep Definisjon API Programmeringsgrensesnitt Tilgangsstyrt API Et API som krever autentisering/autorisering (for eksempel ved bruk av Maskinporten) Reell rettighetshaver En reell rettighetshaver er en fysisk person som gjennom sin eierandel eller stemmeandel, alene eller sammen med andre, kontrollerer virksomheten HTTP Datakommunikasjonsstandard HTTP-statuskoder Statuskoder for datakommunikasjonsstandard REST Datakommunikasjonmønster JSON Åpen standard for dataformat Organisasjonsnummer Identifikasjonsnummer for virksomhet "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_generell/",
	"title": "Generelt - Uthenting av rettsstiftelser",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Innledning Brønnøysundregistrene tilbyr en begrenset, standardisert maskin-til-maskin-tjeneste (API) som kan benyttes av eksterne partnere for innsyn i rettsstiftelser fra Løsøregisteret.\nDenne dokumentasjonen viser hvordan eksterne systemer kan integrere seg mot APIet, og hvordan man benytter seg av tjenesten for å hente data.\nDet er også blitt opprettet en referanseapplikasjon for å gjøre det enklere å se hvordan man skal integrere. Koden for denne er lagt ut i brreg sitt repository på github: refapp-integrasjon\nSyntetiske testdata For enkelte fødsels-, organisasjons og registreringsnummer kan det være registrert flere tusen rettsstiftelser i vårt testmiljø. Ved oppslag på disse kan du oppleve time-out feilmelding. Forsøk da oppslag på en annen identifikator. Brønnøysundregistrene benytter selv det samme testmiljøet, og testdataene er ikke statisk. Disse endres kontinuerlig basert på vår egen testing, samt tinglysning i vårt testmiljø som utføres av eksterne brukere. Du vil også sporadisk kunne finne testdata som har innhold som ikke er i henhold til forretningsregler, eller testdata som er mangelfulle.\nAPI-referanse Denne tjenesten tilbyr opplysninger om:\nRettsstiftelser tilknyttet kjøretøy gitt kjøretøyets registreringsnummer (Merk at oppslag på personlig kjennemerke ikke er støttet) Rettsstiftelser tilknyttet organisasjon gitt tilhørende organisasjonsnummer Rettsstiftelser tilknyttet person gitt personens fødselsnummer eller d-nummer Totalbestand, alle aktive rettsstiftelser. Endringslogg, endringer på rettsstiftelser opp til og med 30 dager tilbake. Dokumentasjon er også tilgjengelig i Swagger:\nTestmiljø Produksjonsmiljø Eksempel på request- og response-objekter (implementert i Java) for APIet kan sees her: refapp-integrasjon DTOer\nSikkerhetsmekanismer Siden dette er begrensede API så skal kallende parter autentiseres gjennom Maskinporten.\nFor å kunne få tilgang til våre begrensede API er det tre forutsetninger:\nVirksomhetssertifikat Registrert klient hos Maskinporten. JWT-token fra Maskinporten mot scopet brreg:losore/tlg Tokenet som hentes fra Maskinporten må bli sendt som autorisasjonstoken (Bearer token) når et kall mot Løsøreregisteret blir utført.\nSe veiledning for integrasjon mot Maskinporten.\nRegelverk: Hjemler for tilgjengeliggjøring av data fra Brønnøysundregistrene.\nHTTP-statuskoder Oversikt over HTTP-statuskoder i APIet.\nHTTP-kode Beskrivelse 200 OK Henting av data gikk bra 400 Bad Request Feil i spørring. Applikasjonen vil gi en detaljert feilmelding for hva som er feil med spørring 403 Forbidden Feil ved autentisering eller autorisering. Bearer tokenet som ble sendt inn er ikke gyldig eller har ikke en gyldig avtale om maskinelt oppslag på opplysninger i Løsøreregisteret 404 Not Found Applikasjonen vil gi en detaljert feilmelding for hva som ikke ble funnet. Kan også bety at man bruker feil adresse for tjenesten (i så fall vil man få en standard \u0026ldquo;404 NOT FOUND\u0026rdquo; og ikke et svar fra applikasjonen) 500 Internal Server Error Feil på server side, for eksempel at en underliggende datakilde ikke svarer Ordliste Definisjoner på begrep som er brukt i denne dokumentasjonen.\nBegrep Definisjon API Programmeringsgrensesnitt HTTP Datakommunikasjonsstandard HTTP-statuskoder Statuskoder for datakommunikasjonsstandard REST Datakommunikasjonmønster JSON Åpen standard for dataformat orgnr Identifikasjonsnummer for virksomhet regnr Registreringsnummer knyttet til et kjøretøy / tilhenger fnr Fødselsnummer for person d-nummer Identifikasjonsnummer som tildeles personer med midlertidig tilknytning til Norge, det vil si som ikke er bosatt i Norge. Består av en modifisert sekssifret fødselsdato og et femsifret personnummer. Fødselsdatoen modifiseres ved at det legges til 4 på det første sifferet. rettsstiftelse Bestemmelse i et dokument som stifter, forandrer, overdrar, behefter, anerkjenner eller opphever en rettighet "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_kjoretoy/",
	"title": "Henting av rettsstiftelser knyttet til kjøretøy",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Grensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/api/v2/rettsstiftelse/regnr/{regnr}?language={language} Hent opplysninger om rettsstiftelser knyttet til et registreringsnummer. Language er valgfri. Domener:\nFor testmiljø (ppe) https://losoreregisteret.ppe.brreg.no/registerinfo For produksjon https://losoreregisteret.brreg.no/registerinfo Oppslag på registreringsnummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et registreringsnummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive rettsstiftelser på registreringsnummeret.\nRequest Tar i mot et registreringsnummer (regnr) som del av URL. Den valgfrie query parameteren \u0026ldquo;language\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB).\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, og dette orgnummeret skal være gyldig samt ha en gyldig avtale om å kunne hente ut opplysninger i Løsøreregisteret. Forespørselen skal alltid inneholde regnr som det gjøres oppslag på. Dersom forespørselen inneholder et regnr som ikke er lovlig oppbygd, returneres det en feilmelding. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;language\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om rettsstiftelsene.\nEksempelrespons { \u0026#34;sokeparameter\u0026#34;: \u0026#34;AB52874\u0026#34;, \u0026#34;antallRettsstiftelser\u0026#34;: 1, \u0026#34;oppslagstidspunkt\u0026#34;: \u0026#34;2023-05-31T09:23:14.026651+02:00\u0026#34;, \u0026#34;rettsstiftelse\u0026#34;: [ { \u0026#34;dokumentnummer\u0026#34;: \u0026#34;1000125407\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rettsstiftelsestype.pbf\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Privat beslagsforbud\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;statusregistreringsobjekt.tl\u0026#34;, \u0026#34;statusBeskrivelse\u0026#34;: \u0026#34;tinglyst\u0026#34;, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2023-05-09T21:00:00+02:00\u0026#34;, \u0026#34;avgrensingRettsstiftelse\u0026#34;: \u0026#34;Beslagsforbudet skal gjelde til 14.05.2080. \u0026#34;, \u0026#34;paategning\u0026#34;: [], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.erverver\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Erverver\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;FRYKTLØS\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;TURBIN\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Borgundsvegen\u0026#34;, \u0026#34;nummer\u0026#34;: { \u0026#34;nummer\u0026#34;: \u0026#34;226\u0026#34; }, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0201\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;BORGUND\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;6888\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;4642\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Lærdal\u0026#34; } } } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.overdrager\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Overdrager\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;MODIG\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;TRAFIKKORK\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Øvre Helle\u0026#34;, \u0026#34;nummer\u0026#34;: { \u0026#34;nummer\u0026#34;: \u0026#34;23\u0026#34; }, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0101\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;KONSMO\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;4525\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;4225\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Lyngdal\u0026#34; } } } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.tillitsmann\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Tillitsmann\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.annenaktor\u0026#34;, \u0026#34;navn\u0026#34;: \u0026#34;Advokat Lars Larsen\u0026#34; } } ], \u0026#34;formuesgode\u0026#34;: [ { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: {}, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;AB52874\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] }, { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: { \u0026#34;teller\u0026#34;: 1, \u0026#34;nevner\u0026#34;: 1 }, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;AB12345\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] } ], \u0026#34;prioritetsvikelse\u0026#34;: [] } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format. Hvis det er ingen treff får man fortsatt 200-status.\nHTTP-kode Feilmelding 400 Ugyldig regnr 403 Forespørsel inneholder ingen gyldig bearer token Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;cba2c68f-2f04-4104-9dbf-8e69c5e36c5c\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-03-07T13:23:35.14512+01:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;Feil i registreringsnummer, vennligst prøv på nytt\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/reelle-rettighetshavere/",
	"title": "Register over reelle rettighetshavere",
	"tags": [],
	"description": "Beskrivelser av API innen domene Reelle rettighetshavere",
	"content": "Våre tjenester Register over reelle rettighetshavere er opprettet som et tiltak for å motvirke hvitvasking, terrorfinansiering og økonomisk kriminalitet.\nFormålet med registeret er å gi oversikt over hvem som egentlig kontrollerer virksomheter.\nRegister over reelle rettighetshavere tilbyr tjenester / API\u0026rsquo;er for uthenting av opplysninger fra registeret.\nNoen tjenester vil ha krav til tilgangsstyring, og det vil skje gjennom bruk av maskinporten.\nVirksomheter som er berettiget tilgang kan få tilgang til tilgangsstyrte tjenester gjennom søknad til Brønnøysundregistrene.\nEn virksomhet som har fått tilgang til tjenester vil kunne delegere denne tilgangen videre til systemleverandør om ønskelig.\nInformasjonsmodeller Informasjonsmodeller beskriver på en formalisert måte informasjon og sammenhengene mellom informasjonselementene innenfor forretningsområdet for registeret.\nMer informasjon om hvilke typer informasjonsmodeller vi legger ut finner du her.\nForretningsprosessmodeller og strukturmodeller for registeret finner du her.\nLøsningsmodeller vil du finne under de enkelte API-beskrivelsene.\nTestdata Testdata om personer og virksomheter i våre tjenester vil være syntetiske. Kilden til syntetiske data om personer og virksomheter er Tenor som er en tjeneste for testdatasøk som tilbys av Skatteetaten.\nFor våre oppslagstjenester vil vi i tilknytning til den aktuelle tjenesten liste opp syntetiske testdata som konsumenter kan benytte under testing.\nDu kan se et eksempel på testdata her\nVersjonering Vi versjonerer våre tjenester slik at vi kan gjøre oppdateringer uten for store konsekvenser for konsumentene.\nVersjonering gjøres ved bruk av content negotiation. Dette betyr i praksis at du kan be om en respons basert på en bestemt versjon av endepunktet ved å angi en custom media type som http Accept-header i requesten.\nVersjoneringsstrategi Vi vil forsøke så langt det lar seg gjøre å ikke bryte bakoverkompatibiliteten med våre brukere.\nLikevel kan det være nødvendig i enkelte situasjoner, av for eksempel juridiske årsaker eller vedlikehold, å gjøre endringer som fører til et slikt brudd.\nVi vil i dette tilfellet versjonere tjenesten slik at nyeste versjon vil være tilgjengelig sammen med forrige versjon.\nHvis du ikke angir ønsket versjon i accept-header vil du få siste versjon.\nEldre versjon vil anses som utdatert/deprecated, og vil på sikt bli tatt bort.\nVed behov for denne typen endringer vil vi forsøke å gi bruker god tid, og varsle om endringen i forkant.\nHvordan velger jeg versjon? Du kan velge versjon ved å angi en media type i accept-headeren i requesten. Hvilke lovlige verdier du kan legge inn i accept-headeren er nærmere spesifisert i API-dokumentasjonen for de enkelte tjenestene.\nTIPS: Vi anbefaler at dere legger til en Accept-header der dere ber om en konkret versjon, feks application/vnd.brreg.rrh.virksomhet.v1+json;charset=UTF-8.\nDersom vi på et tidspunkt legger ut en ny versjon av API\u0026rsquo;et vil dere da være sikre på at dere får den forespurte versjonen tilbake.\nDere vil på denne måten kontrollert kunne gå over til den nye versjonen når dere er klar for det.\nNår innføres det en ny versjon? Vi vil innføre en ny versjon når vi introduserer en endring som påvirker bakoverkompatibiliteten. Mindre endringer og patcher vil ikke medføre versjonsendring i header.\nEksempel på endring som medfører versjonering:\nFjerne eller endre navn på et attributt i HTTP-responsen Fjerne eller endre navn på et REST-endepunkt Når fjernes en versjon? Vi vil legge ut varsel/driftsmeldinger i god tid på https://www.brreg.no/om-oss/driftsmeldinger/. I tillegg kan du abonnere på en RSS-feed her.\n"
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_orgnr/",
	"title": "Henting av rettsstiftelser knyttet til virksomhet",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Grensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/api/v2/rettsstiftelse/orgnr/{orgnr}?language={language}\u0026amp;sluttbrukerOrgNr={sluttbrukerOrgNr} Hent opplysninger om rettsstiftelser knyttet til et organisasjonsnummer. Language og sluttbrukerOrgNr er valgfri. Domener:\nFor testmiljø (ppe) https://losoreregisteret.ppe.brreg.no/registerinfo For produksjon https://losoreregisteret.brreg.no/registerinfo Oppslag på organisasjonsnummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et organisasjonsnummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive rettsstiftelser på organisasjonsnummer.\nRequest Tar i mot et organisasjonsnummer (orgnr) som del av URL. Den valgfrie query parameteren \u0026ldquo;language\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB). Valgfri query parameter \u0026ldquo;sluttbrukerOrgNr\u0026rdquo; muliggjør at konsumenten kan presisere at oppslaget gjøres på vegne av en tredjepart som har avtale med konsumenten om uthenting av data. Dette er mest aktuelt for avtaleparter som omtales som distributører. Parameteren forventes utformet som et standard organisasjonsnummer fra Enhetsregisteret.\nValidering av forespørsler Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, og dette orgnummeret skal være gyldig, samt ha en gyldig avtale om å kunne hente ut opplysninger i Løsøreregisteret. Forespørselen skal alltid inneholde orgnr som det gjøres oppslag på. Dersom forespørselen inneholder et orgnr som ikke er lovlig oppbygget, returneres det en feilmelding. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;language\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Dersom forespørselen inneholder parameter \u0026ldquo;sluttbrukerOrgNr\u0026rdquo; som ikke er lovlig oppbygd, returneres det en feilmelding. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om rettsstiftelsene.\nEksempelrespons { \u0026#34;sokeparameter\u0026#34;: \u0026#34;810304642\u0026#34;, \u0026#34;antallRettsstiftelser\u0026#34;: 1, \u0026#34;oppslagstidspunkt\u0026#34;: \u0026#34;2023-05-31T08:52:33.311351+02:00\u0026#34;, \u0026#34;rettsstiftelse\u0026#34;: [ { \u0026#34;dokumentnummer\u0026#34;: \u0026#34;1000025203\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rettsstiftelsestype.pfr\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Pant i fiskeredskaper\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;statusregistreringsobjekt.tl\u0026#34;, \u0026#34;statusBeskrivelse\u0026#34;: \u0026#34;tinglyst\u0026#34;, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2022-12-15T12:38:35+01:00\u0026#34;, \u0026#34;paategning\u0026#34;: [], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.panthaver\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Panthaver\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.rett\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Rettighetshaver\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;navn\u0026#34;: \u0026#34;INNESLUTTET LYSEGRØNN TIGER AS\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;313299767\u0026#34;, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.ustrukturertAdresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;forretningsadresse\u0026#34;, \u0026#34;adresselinje1\u0026#34;: \u0026#34;Brekkaveien 1I\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;SORTLAND\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;8402\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;1870\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;SORTLAND\u0026#34; } } } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.pantsetter\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Pantsetter\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.forp\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Forpliktet\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810304642\u0026#34; } } ], \u0026#34;formuesgode\u0026#34;: [ { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.tingsinnbegrep\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.fi.t\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Fiskeredskap\u0026#34;, \u0026#34;eierandel\u0026#34;: {}, \u0026#34;avgrensingTingsinnbegrep\u0026#34;: \u0026#34;avgrensingtingsinnbegrep.hel\u0026#34;, \u0026#34;avgrensingTingsinnbegrepBeskrivelse\u0026#34;: \u0026#34;i sin helhet, slik det er til enhver tid\u0026#34; } ], \u0026#34;prioritetsvikelse\u0026#34;: [], \u0026#34;krav\u0026#34;: { \u0026#34;belop\u0026#34;: [ { \u0026#34;belop\u0026#34;: 741000, \u0026#34;valuta\u0026#34;: \u0026#34;NOK\u0026#34; } ] } } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format. Hvis det er ingen treff, får man fortsatt 200-status.\nHTTP-kode Feilmelding 400 Feil i fødselsnummer/organisasjonsnummer, vennligst prøv på nytt 403 Feil under autentisering av abonnent Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;c1c188f5-2fe2-4a1b-97f1-360fff37ea21\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-04-17T08:52:52.960824+02:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;Feil i fødselsnummer/organisasjonsnummer, vennligst prøv på nytt\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_fnr/",
	"title": "Henting av rettsstiftelser knyttet til person",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Grensesnittbeskrivelse HTTP-metode URL Beskrivelse GET https://{domene}/api/v2/rettsstiftelse/fnr/{fnr}?language={language}\u0026amp;sluttbrukerOrgNr={sluttbrukerOrgNr} Hent opplysninger om rettsstiftelser knyttet til et fødselsnummer eller d-nummer. Language og sluttbrukerOrgNr er valgfri. Domener:\nFor testmiljø (ppe) https://losoreregisteret.ppe.brreg.no/registerinfo For produksjon https://losoreregisteret.brreg.no/registerinfo Oppslag på fødselsnummer Beskrivelse Tjenesten tar imot en forespørsel om oppslag på et fødselsnummer eller d-nummer, forespørselen valideres før utførelsen og returnerer opplysninger om kun aktive rettsstiftelser på fødselsnummeret eller d-nummeret.\nRequest Tar i mot et fødselsnummer eller d-nummer (fnr) som del av URL. Den valgfrie query parameteren \u0026ldquo;language\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB). Valgfri query parameter \u0026ldquo;sluttbrukerOrgNr\u0026rdquo; muliggjør at konsumenten kan presisere at oppslaget gjøres på vegne av en tredjepart som har avtale med konsumenten om uthenting av data. Dette er mest aktuelt for avtaleparter som omtales som distributører. Parameteren forventes utformet som et standard organisasjonsnummer fra Enhetsregisteret.\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens orgnummer, og dette orgnummeret skal være gyldig samt ha en gyldig avtale om å kunne hente ut opplysninger i Løsøreregisteret. Forespørselen skal alltid inneholde fnr som det gjøres oppslag på. Dersom forespørselen inneholder et fnr som ikke er lovlig oppbygd, returneres det en feilmelding. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;language\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Dersom forespørselen inneholder parameter \u0026ldquo;sluttbrukerOrgNr\u0026rdquo; som ikke er lovlig oppbygd, returneres det en feilmelding. Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om rettsstiftelsene.\nEksempelrespons { \u0026#34;sokeparameter\u0026#34;: \u0026#34;11913049987\u0026#34;, \u0026#34;antallRettsstiftelser\u0026#34;: 1, \u0026#34;oppslagstidspunkt\u0026#34;: \u0026#34;2023-05-31T09:35:51.548089+02:00\u0026#34;, \u0026#34;rettsstiftelse\u0026#34;: [ { \u0026#34;dokumentnummer\u0026#34;: \u0026#34;1000125407\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rettsstiftelsestype.pbf\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Privat beslagsforbud\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;statusregistreringsobjekt.tl\u0026#34;, \u0026#34;statusBeskrivelse\u0026#34;: \u0026#34;tinglyst\u0026#34;, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2023-05-09T21:00:00+02:00\u0026#34;, \u0026#34;avgrensingRettsstiftelse\u0026#34;: \u0026#34;Beslagsforbudet skal gjelde til 14.05.2080. \u0026#34;, \u0026#34;paategning\u0026#34;: [], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.erverver\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Erverver\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;FRYKTLØS\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;TURBIN\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Borgundsvegen\u0026#34;, \u0026#34;nummer\u0026#34;: { \u0026#34;nummer\u0026#34;: \u0026#34;226\u0026#34; }, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0201\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;BORGUND\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;6888\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;4642\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Lærdal\u0026#34; } } } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.overdrager\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Overdrager\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;MODIG\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;TRAFIKKORK\u0026#34; }, \u0026#34;adresse\u0026#34;: { \u0026#34;adresseType\u0026#34;: \u0026#34;adressetype.vegadresse\u0026#34;, \u0026#34;brukskategori\u0026#34;: \u0026#34;bostedsadresse\u0026#34;, \u0026#34;adressenavn\u0026#34;: \u0026#34;Øvre Helle\u0026#34;, \u0026#34;nummer\u0026#34;: { \u0026#34;nummer\u0026#34;: \u0026#34;23\u0026#34; }, \u0026#34;bruksenhetsnummer\u0026#34;: \u0026#34;H0101\u0026#34;, \u0026#34;poststed\u0026#34;: { \u0026#34;navn\u0026#34;: \u0026#34;KONSMO\u0026#34;, \u0026#34;postnummer\u0026#34;: \u0026#34;4525\u0026#34; }, \u0026#34;kommune\u0026#34;: { \u0026#34;kommunenummer\u0026#34;: \u0026#34;4225\u0026#34;, \u0026#34;kommunenavn\u0026#34;: \u0026#34;Lyngdal\u0026#34; } } } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.tillitsmann\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Tillitsmann\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.anro\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Annen rolle\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.annenaktor\u0026#34;, \u0026#34;navn\u0026#34;: \u0026#34;Advokat Lars Larsen\u0026#34; } } ], \u0026#34;formuesgode\u0026#34;: [ { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: {}, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;AB52874\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] }, { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: { \u0026#34;teller\u0026#34;: 1, \u0026#34;nevner\u0026#34;: 1 }, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;AB12345\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] } ], \u0026#34;prioritetsvikelse\u0026#34;: [] } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format. Hvis det er ingen treff får man fortsatt 200-status.\nHTTP-kode Feilmelding 400 Feil i fødselsnummer/organisasjonsnummer, vennligst prøv på nytt 403 Feil under autentisering av abonnent Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;5d217325-fa5a-47a1-8069-781fa5e1dedc\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-04-17T08:53:21.859622+02:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;Feil i fødselsnummer/organisasjonsnummer, vennligst prøv på nytt\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_totalbestand/",
	"title": "Totalbestand",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Bruksmønster Tjenestene for å hente alle rettsstiftelser, og abonnere på endringene er delt inn i totalbestand og endringslogg. Totalbestand er endepunktet man bruker for å hente hele den aktive bestanden opp til og med et bestemt tidspunkt. Når man har hentet alt som var tilgjengelig fra totalbestanden skal man bruke endringslogg endepunktet for å lytte på endringer i datasettet. Av denne grunn er tjenesten avgrenset slik at man med endringsloggen kun kan hente rettsstiftelser som ble prosessert iløpet av de siste 30 dagene.\nStegvis fremgangsmåte for å hente og vedlikeholde bestanden: Kall totalbestand endepunktet med \u0026ldquo;upperCutoff\u0026rdquo; med tidspunkt da hentingen ble påbegynt, paginer igjennom resultatene som vist nedenfor. Når man mottar en tom page har man hele totalbestanden opp til tidspunktet, ta med tidspunktet brukt i \u0026ldquo;upperCutOff\u0026rdquo; til bruk i endringslogg. Kall endringslogg med feltet \u0026ldquo;lowerCutoff\u0026rdquo; satt til dette tidspunktet, paginer igjennom på tilsvarende måte. Når man når tom side har man endringsloggen frem til nå. Ta vare på feltet sistEndretSisteInnslag fra siste page. Vent til man ønsker å hente endringslogg igjen, og gjenta fra steg 3. Grensesnittbeskrivelse HTTP-metode URL Beskrivelse POST https://{domene}/api/v2/rettsstiftelse/totalbestand?language={language} Hent alle opplysninger om aktive rettsstiftelser opp til et ønsket tidspunkt. Language er valgfri. Domener:\nFor testmiljø (ppe) https://losoreregisteret.ppe.brreg.no/registerinfo For produksjon https://losoreregisteret.brreg.no/registerinfo Henting av totalbestand Beskrivelse Tjenesten tar imot en forespørsel med feltene upperCutOff for tidspunkt-avgrensning og lastSortValues for paginering. Den valgfrie query parameteren \u0026ldquo;language\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB).\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens organisasjonsnummer, og dette organisasjonsnummeret skal være gyldig samt ha en gyldig avtale for å kunne hente ut opplysninger i Løsøreregisteret. Avgrensningsverdien upperCutoff i request-body er en timestamp med tidssone på formatet \u0026ldquo;YYYY-MM-DDTHH:MM:SS.mmm+HH:MM\u0026rdquo;, det valideres at feltet ikke peker frem i tid. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;language\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Paginering Grunnet store datamengder er det nødvendig å paginere requests og respons til tjenesten. Dette gjøres ved hjelp av feltet \u0026ldquo;lastSortValues\u0026rdquo;. Ved første forespørsel skal dette feltet være null, deretter skal det settes til verdien til feltet \u0026ldquo;sortValues\u0026rdquo; i responsen fra forrige request. Dette gjør at tjenesten er istand til å vite hvilken side av datasettet den skal returnere.\nMerk: Siste side vil ha 0 rettsstiftelser, og vil ikke inneholde \u0026ldquo;sortValues\u0026rdquo;.\nRequest Første request før paginering vil kunne se slik ut:\n{ \u0026#34;upperCutoff\u0026#34;: \u0026#34;2023-03-06T00:00:00.000+02:00\u0026#34;, \u0026#34;lastSortValues\u0026#34;: null } Deretter vil man, basert på \u0026ldquo;sortValues\u0026rdquo; fra forrige response, utforme en request som dette:\n{ \u0026#34;upperCutoff\u0026#34;: \u0026#34;2023-03-06T00:00:00.000+02:00\u0026#34;, \u0026#34;lastSortValues\u0026#34;: [ \u0026#34;1685515741112\u0026#34;, \u0026#34;1000009845\u0026#34; ] } Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om rettsstiftelsene.\nEksempelrespons { \u0026#34;upperCutoffForrigeRequest\u0026#34;: \u0026#34;2023-03-06T00:00:00.000+02:00\u0026#34;, \u0026#34;sortValues\u0026#34;: [ \u0026#34;1685515741112\u0026#34;, \u0026#34;1000009845\u0026#34; ], \u0026#34;antallRettsstiftelser\u0026#34;: 1, \u0026#34;rettsstiftelse\u0026#34;: [ { \u0026#34;dokumentnummer\u0026#34;: \u0026#34;1000009845\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rettsstiftelsestype.sap\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Salgspant\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;statusregistreringsobjekt.tl\u0026#34;, \u0026#34;statusBeskrivelse\u0026#34;: \u0026#34;tinglyst\u0026#34;, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2022-11-11T08:00:00+01:00\u0026#34;, \u0026#34;utlopRettsvernstid\u0026#34;: \u0026#34;2042-11-11\u0026#34;, \u0026#34;paategning\u0026#34;: [], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.panthaver\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Panthaver\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.rett\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Rettighetshaver\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844612\u0026#34; } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.pantsetter\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Pantsetter\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.forp\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Forpliktet\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810845422\u0026#34; } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.pantsetter\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Pantsetter\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.forp\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Forpliktet\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;PLUTSELIG\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;MORMOR\u0026#34; }, \u0026#34;fodselsnummerEllerDNummer\u0026#34;: \u0026#34;13888998238\u0026#34; } } ], \u0026#34;formuesgode\u0026#34;: [ { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: {}, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;CU11242\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] } ], \u0026#34;prioritetsvikelse\u0026#34;: [], \u0026#34;krav\u0026#34;: { \u0026#34;belop\u0026#34;: [ { \u0026#34;belop\u0026#34;: 105158028, \u0026#34;valuta\u0026#34;: \u0026#34;NOK\u0026#34; } ], \u0026#34;kravSalgspant\u0026#34;: \u0026#34;kravsalgspant.selgers.krav\u0026#34;, \u0026#34;kravSalgspantBeskrivelse\u0026#34;: \u0026#34;selgerens krav på kjøpesummen\u0026#34; } } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format.\nHTTP-kode Feilmelding 400 Totalbestand kan ikke hentes med upperCutoff frem i tid. 403 Forespørsel inneholder ingen gyldig bearer token Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;cba2c68f-2f04-4104-9dbf-8e69c5e36c5c\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-04-17T09:16:08.815966+02:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;Totalbestand kan ikke hentes med upperCutoff frem i tid.\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/apidokumentasjon/losoreregisteret/rettsstiftelse/rettsstiftelse_endringslogg/",
	"title": "Endringslogg",
	"tags": [],
	"description": "Beskrivelser av API innen domene Rettsstiftelse",
	"content": "Bruksmønster Se siden for totalbestand for en helhetlig oversikt av bruksmønsteret for endringslogg og totalbestand.\nGrensesnittbeskrivelse HTTP-metode URL Beskrivelse POST https://{domene}/api/v2/rettsstiftelse/endringslogg?language={language} Hent opplysninger endringer på rettsstiftelser fra et ønsket tidspunkt. Language er valgfri. Domener:\nFor testmiljø (ppe) https://losoreregisteret.ppe.brreg.no/registerinfo For produksjon https://losoreregisteret.brreg.no/registerinfo Henting av endringslogg Beskrivelse Endepunktet tar imot en forespørsel med felter lowerCutoff for tidspunkt-avgrensning og lastSortValues for paginering. Den valgfrie query parameteren \u0026ldquo;language\u0026rdquo; angir språkkode (ISO 639-2) for hvilket språk som skal benyttes for beskrivelser i responsen. Hvis den ikke er angitt benyttes norsk bokmål (NOB).\nMerk: Kun rettsstiftelser nyere enn 30 dager vil inkluderes i responsen, uavhengig av om lowerCutoff settes før dette.\nValidering Maskinport-tokenet som blir sendt inn er knyttet til avtalepartens organisasjonsnummer, og dette organisasjonsnummeret skal være gyldig samt ha en gyldig avtale for å kunne hente ut opplysninger i Løsøreregisteret. Det sjekkes at avtalepartens organisasjonsnummer er registrert og ikke slettet i Enhetsregisteret. Dersom det ikke er registrert, eller er slettet, returneres det en feilmelding. Hvis \u0026ldquo;language\u0026rdquo; er angitt må verdien være en støttet språkkode, hvis ikke returneres det en feilmelding med informasjon om støttede språkkoder. Paginering Grunnet store datamengder er det nødvendig å paginere requests og respons til tjenesten. Dette gjøres ved hjelp av feltet \u0026ldquo;lastSortValues\u0026rdquo;. For å få første page skal dette feltet være null, deretter skal man sette dette feltet til verdien av feltet \u0026ldquo;sortValues\u0026rdquo; fra forrige response. Dette gjør at tjenesten er istand til å vite hvilken side av datasettet den skal returnere.\nMerk: Siste side vil ha 0 rettsstiftelser, og vil ikke inneholde \u0026ldquo;sortValues\u0026rdquo;. Dette vil gjelde første side hvis det ikke har vært endringer på rettsstiftelser etter tidspunktet angitt av lowerCutoff.\nRequest Første request før paginering vil kunne se slik ut:\n{ \u0026#34;lowerCutoff\u0026#34;: \u0026#34;2023-03-01T00:00:00.000+02:00\u0026#34;, \u0026#34;lastSortValues\u0026#34;: null } Deretter vil man, basert på \u0026ldquo;sortValues\u0026rdquo; fra forrige response, utforme en request som dette:\n{ \u0026#34;lowerCutoff\u0026#34;: \u0026#34;2023-03-01T00:00:00.000+02:00\u0026#34;, \u0026#34;lastSortValues\u0026#34;: [ \u0026#34;1685515741112\u0026#34;, \u0026#34;1000009845\u0026#34; ] } Response Dersom kallet lykkes får man HTTP-status 200 og data fra tjenesten på JSON-format, i form av et JSON-objekt som inneholder opplysninger om rettsstiftelsene.\nEksempelrespons { \u0026#34;sistEndretSisteInnslag\u0026#34;: \u0026#34;2023-05-31T08:49:01.112334+02:00\u0026#34;, \u0026#34;sortValues\u0026#34;: [ \u0026#34;1685515741112\u0026#34;, \u0026#34;1000009845\u0026#34; ], \u0026#34;antallRettsstiftelser\u0026#34;: 1, \u0026#34;rettsstiftelse\u0026#34;: [ { \u0026#34;dokumentnummer\u0026#34;: \u0026#34;1000009845\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rettsstiftelsestype.sap\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Salgspant\u0026#34;, \u0026#34;status\u0026#34;: \u0026#34;statusregistreringsobjekt.tl\u0026#34;, \u0026#34;statusBeskrivelse\u0026#34;: \u0026#34;tinglyst\u0026#34;, \u0026#34;innkomsttidspunkt\u0026#34;: \u0026#34;2022-11-11T08:00:00+01:00\u0026#34;, \u0026#34;utlopRettsvernstid\u0026#34;: \u0026#34;2042-11-11\u0026#34;, \u0026#34;paategning\u0026#34;: [], \u0026#34;rolle\u0026#34;: [ { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.panthaver\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Panthaver\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.rett\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Rettighetshaver\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810844612\u0026#34; } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.pantsetter\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Pantsetter\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.forp\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Forpliktet\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.virksomhet\u0026#34;, \u0026#34;organisasjonsnummer\u0026#34;: \u0026#34;810845422\u0026#34; } }, { \u0026#34;rolletype\u0026#34;: \u0026#34;rolletype.pantsetter\u0026#34;, \u0026#34;rolletypeBeskrivelse\u0026#34;: \u0026#34;Pantsetter\u0026#34;, \u0026#34;rollegruppetype\u0026#34;: \u0026#34;rollegruppe.forp\u0026#34;, \u0026#34;rollegruppetypeBeskrivelse\u0026#34;: \u0026#34;Forpliktet\u0026#34;, \u0026#34;rolleinnehaver\u0026#34;: { \u0026#34;aktorType\u0026#34;: \u0026#34;aktortype.person\u0026#34;, \u0026#34;personnavn\u0026#34;: { \u0026#34;fornavn\u0026#34;: \u0026#34;PLUTSELIG\u0026#34;, \u0026#34;etternavn\u0026#34;: \u0026#34;MORMOR\u0026#34; }, \u0026#34;fodselsnummerEllerDNummer\u0026#34;: \u0026#34;13888998238\u0026#34; } } ], \u0026#34;formuesgode\u0026#34;: [ { \u0026#34;identifiseringsmate\u0026#34;: \u0026#34;identifiseringsmate.entydig\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;formuesgodetype.mv.e\u0026#34;, \u0026#34;typeBeskrivelse\u0026#34;: \u0026#34;Registrert motorvogn\u0026#34;, \u0026#34;eierandel\u0026#34;: {}, \u0026#34;registreringsnummerMotorvogn\u0026#34;: \u0026#34;CU11242\u0026#34;, \u0026#34;historiskRegistreringsnummerMotorvogn\u0026#34;: [] } ], \u0026#34;prioritetsvikelse\u0026#34;: [], \u0026#34;krav\u0026#34;: { \u0026#34;belop\u0026#34;: [ { \u0026#34;belop\u0026#34;: 105158028, \u0026#34;valuta\u0026#34;: \u0026#34;NOK\u0026#34; } ], \u0026#34;kravSalgspant\u0026#34;: \u0026#34;kravsalgspant.selgers.krav\u0026#34;, \u0026#34;kravSalgspantBeskrivelse\u0026#34;: \u0026#34;selgerens krav på kjøpesummen\u0026#34; } } ] } Feilmeldinger Dersom man ikke får HTTP-status 200, så får man en melding fra tjenesten i JSON-format.\nHTTP-kode Feilmelding 403 Feil under autentisering av abonnent Eksempelrespons feilmelding { \u0026#34;korrelasjonsid\u0026#34;: \u0026#34;abd970cf-dae9-45cc-a9af-2011e512f96b\u0026#34;, \u0026#34;tidspunkt\u0026#34;: \u0026#34;2023-04-17T09:18:39.931121+02:00\u0026#34;, \u0026#34;feilmelding\u0026#34;: \u0026#34;lowerCutoff kan ikke være mer enn 30 dager tilbake i tid\u0026#34; } "
},
{
	"uri": "https://brreg.github.io/docs/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " docs\n"
},
{
	"uri": "https://brreg.github.io/docs/",
	"title": "BR docs",
	"tags": [],
	"description": "Åpen dokumentasjon for BR.",
	"content": "\r\u0026nbsp;docs\rBR dokumentasjon Prosjektet for Brønnøysundregistrenes nye registerplattform (BRsys) er i en utviklingsfase, og vi er i gang med å forbedre dokumentasjonen vår og gjøre den enkel å vedlikeholde. Dokumentasjonen du finner her består av markdown på GitHub, som så blir til denne løsningen. Markdown er et kodespråk med enkel syntaks for å definere formatering som en del av teksten, som kan maskinelt tolkes og vises som rike tekstsider - som for eksempel HTML-sidene du finner her.\nBrønnøysundregistrenes nye registerplattform vil tilby en rekke API-er som kan benyttes av virksomheter som bruker registerdata. Dokumentasjon av API-ene er samlet her, og vil publiseres etter hvert som API-ene ferdigstilles og blir klar for testing.\nØnsker du å bidra? Hver side inneholder en \u0026ldquo;\rEndre\u0026quot;-lenke til den tilsvarende markdown-filen i GitHub. Alle kan med andre ord foreslå endringer og forbedringer, enten ved å benytte \u0026ldquo;pull requests\u0026rdquo;, eller stille spørsmål eller påpeke feil ved å opprette \u0026ldquo;issues\u0026rdquo;, som vi så vil forsøke å svare på.\nSe også Kontakt oss-siden.\n"
},
{
	"uri": "https://brreg.github.io/docs/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://brreg.github.io/docs/credits/",
	"title": "Kred",
	"tags": [],
	"description": "Hyllest",
	"content": "Denne dokumentasjonssiten er basert på åpen kildekode fra et tilsvarende eksisterende GitHub-prosjekt - Altinn docs. Takk til Altinn, og også Informasjonsforvaltning/Felles datakatalog som har en lignende dokumentasjonssite!\nVi i BR benytter Hugo for å generere opp hele dokumentasjonen med søk som en statisk web site.\nDet hele tar typisk noen sekunder. Hugo er åpen kildekode i tillegg til å være lynrask. Anbefales.\nFor søk benyttes lunr.js.\nSom tema benytter vi docDock. Stor takk til Valere JEANTET.\nReveal.js er et fantastisk rammeverk for presentasjoner på web. Takk til Hakim El Hattab.\n"
},
{
	"uri": "https://brreg.github.io/docs/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]